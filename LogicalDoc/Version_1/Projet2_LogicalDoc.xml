<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d1ed2da6-8282-44ad-b550-4288019749d9" created="3.42.1" activeEnvironment="Default environment" name="Project 1" projectVersion="" resourceRoot="" updated="3.42.1 2022-11-28T12:27:35Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="e19cc9f6-fc74-4554-a82a-7c697b751b98" name="LogicalDOC REST API" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="https://docs.logicaldoc.com/resources/wsdoc/rest/7.6.4/swagger.json" basePath="/services/rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description><![CDATA[This is the interactive documentation of the REST APIs exposed by LogicalDOC. You can find more information about LogicalDOC at http://logicaldoc.com or on Twitter @logicaldoc.<br/>                Note: The access path to the API is protected with basic authentication, to be able to run the samples you must log in using the credentials of a Logicaldoc user, or passing to the request the session ID (SID) as a cookie (cookie name: `ldoc-sid`).<br/><br/>             Here is an example to list the children folders: <br/>             curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4             <br/><br/>             More examples are available at the following address: http://wiki.logicaldoc.com/wiki/Bindings_And_Samples             <br/><br/>             **Find out more about LogicalDOC** http://logicaldoc.com]]></con:description><con:settings/><con:definitionCache type="TEXT" rootPart="https://docs.logicaldoc.com/resources/wsdoc/rest/7.6.4/swagger.json"><con:part><con:url>https://docs.logicaldoc.com/resources/wsdoc/rest/7.6.4/swagger.json</con:url><con:content><![CDATA[{"swagger":"2.0","info":{"description":"This is the interactive documentation of the REST APIs exposed by LogicalDOC. You can find more information about LogicalDOC at http://logicaldoc.com or on Twitter @logicaldoc.<br/>                Note: The access path to the API is protected with basic authentication, to be able to run the samples you must log in using the credentials of a Logicaldoc user, or passing to the request the session ID (SID) as a cookie (cookie name: `ldoc-sid`).<br/><br/>             Here is an example to list the children folders: <br/>             curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4             <br/><br/>             More examples are available at the following address: http://wiki.logicaldoc.com/wiki/Bindings_And_Samples             <br/><br/>             **Find out more about LogicalDOC** http://logicaldoc.com","version":"7.6.4","title":"LogicalDOC REST API","contact":{"name":"devel@logicaldoc.com"},"license":{"name":"Apache 2.0 License","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"basePath":"/services/rest","tags":[{"name":"document"},{"name":"bookmark"},{"name":"folder"},{"name":"tag"},{"name":"search"}],"paths":{"/bookmark/bookmarkDocument":{"get":{"tags":["bookmark"],"operationId":"bookmarkDocument","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSBookmark"},"headers":{}}}}},"/bookmark/bookmarkFolder":{"get":{"tags":["bookmark"],"operationId":"bookmarkFolder","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSBookmark"},"headers":{}}}}},"/bookmark/deleteBookmark":{"delete":{"tags":["bookmark"],"operationId":"deleteBookmark","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"bookmarkId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/bookmark/getBookmarks":{"get":{"tags":["bookmark"],"operationId":"getBookmarks","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSBookmark"}},"headers":{}}}}},"/bookmark/saveBookmark":{"post":{"tags":["bookmark"],"operationId":"saveBookmark","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/WSBookmark"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSBookmark"},"headers":{}}}}},"/bookmark/unbookmarkDocument":{"delete":{"tags":["bookmark"],"operationId":"unbookmarkDocument","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/bookmark/unbookmarkFolder":{"delete":{"tags":["bookmark"],"operationId":"unbookmarkFolder","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/document/addNote":{"post":{"tags":["document"],"summary":"Adds a new note for the given document","description":"","operationId":"addNote","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"docId","in":"formData","description":"Document ID","required":true,"type":"integer","format":"int64"},{"name":"note","in":"formData","description":"Text of the note to add","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSNote"}}}}},"/document/checkin":{"post":{"tags":["document"],"summary":"Check-in an existing document","description":"Performs a check-in (commit) operation of new content over an existing document. The document must be in checked-out status","operationId":"checkin","consumes":["multipart/form-data"],"produces":["text/plain","application/json","application/xml"],"parameters":[{"name":"docId","in":"formData","description":"The ID of an existing document to update","required":true,"type":"integer"},{"name":"comment","in":"formData","description":"An optional comment","required":false,"type":"string"},{"name":"release","in":"formData","description":"Indicates whether to create or not a new major release of the updated document","required":false,"type":"string","enum":["true","false"]},{"name":"filename","in":"formData","description":"File name","required":true,"type":"string"},{"name":"filedata","in":"formData","description":"File data","required":true,"type":"file"}],"responses":{"401":{"description":"Authentication failed"},"500":{"description":"Generic error, see the response message"}}}},"/document/checkout":{"post":{"tags":["document"],"summary":"Checkout a document","description":"Performs the checkout operation on a document. The document status will be changed to checked-out","operationId":"checkout","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"docId","in":"formData","required":false,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/document/create":{"post":{"tags":["document"],"summary":"Creates a new document","description":"Creates a new document using the metadata document object provided as JSON/XML","operationId":"createDocument","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"document","in":"formData","description":"The document metadata provided as WSDocument object encoded in JSON/XML format","required":true,"type":"string"},{"name":"content","in":"formData","description":"File data","required":true,"type":"file"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSDocument"}},"401":{"description":"Authentication failed"},"500":{"description":"Generic error, see the response message"}}}},"/document/delete":{"delete":{"tags":["document"],"summary":"Deletes a document","description":"","operationId":"delete","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","description":"Document ID to delete","required":true,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/document/deleteNote":{"delete":{"tags":["document"],"summary":"Deletes a note","description":"","operationId":"deleteNote","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"noteId","in":"query","description":"ID of the note to delete","required":true,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/document/deleteVersion":{"delete":{"tags":["document"],"summary":"Delete the version of a document","description":"Deletes the version of a document using the document ID and version. You can not delete the latest version of a document. Returns the latest version of the document","operationId":"deleteVersion","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","required":false,"type":"integer","format":"int64"},{"name":"version","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}}}}},"/document/getContent":{"get":{"tags":["document"],"summary":"Gets the document content","description":"Returns the content of a document using the document ID in input","operationId":"getContent","consumes":["application/xml","application/json"],"produces":["application/octet-stream"],"parameters":[{"name":"docId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DataHandler"}}}}},"/document/getDocument":{"get":{"tags":["document"],"summary":"Gets document metadata","description":"Gets the document metadata","operationId":"getDocument","consumes":["application/xml","application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"docId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSDocument"}}}}},"/document/getNotes":{"get":{"tags":["document"],"summary":"Gets all the notes of a document","description":"","operationId":"getNotes","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","description":"Document ID","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSNote"}}}}}},"/document/getRatings":{"get":{"tags":["document"],"summary":"Retrieves the different ratings of a focuments","description":"","operationId":"getRatings","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","description":"Document ID","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSRating"}}}}}},"/document/getVersionContent":{"get":{"tags":["document"],"summary":"Gets the document content by version","description":"Returns the content of a document using the document ID and version","operationId":"getVersionContent","consumes":["application/xml","application/json"],"produces":["application/octet-stream"],"parameters":[{"name":"docId","in":"query","required":false,"type":"integer","format":"int64"},{"name":"version","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/DataHandler"}}}}},"/document/list":{"get":{"tags":["document"],"summary":"Lists documents by folder","description":"Lists Documents by folder identifier","operationId":"list","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSDocument"}}}}}},"/document/listDocuments":{"get":{"tags":["document"],"summary":"Lists documents by folder and filename","description":"Lists Documents by folder ID filtering the results by filename","operationId":"listDocuments","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","required":false,"type":"integer","format":"int64"},{"name":"fileName","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSDocument"}}}}}},"/document/rateDocument":{"get":{"tags":["document"],"summary":"Add/Update the user's vote for a document","description":"","operationId":"rateDocument","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","description":"Document ID","required":true,"type":"integer","format":"int64"},{"name":"vote","in":"query","description":"The user's vote","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSRating"}}}}},"/document/update":{"put":{"tags":["document"],"summary":"Updates an existing document","description":"Updates the metadata of an existing document. The ID of the document must be specified in the WSDocument value object. The provided example moves document with ID 1111111 to folder 3435433","operationId":"update","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Document object that needs to be updated","required":true,"schema":{"$ref":"#/definitions/WSDocument"},"x-examples":{"default":"{ \"id\": 1111111, \"folderId\": 3435433 }"}}],"responses":{"default":{"description":"successful operation"}}}},"/document/upload":{"post":{"tags":["document"],"summary":"Uploads a document","description":"Creates or updates an existing document, if used in update mode docId must be provided, when used in create mode folderId is required. Returns the ID of the created/updated document. &lt;br/&gt;Example: curl -u admin:admin -H ''Accept: application/json'' -X POST -F folderId=4 -F filename=newDoc.txt -F filedata=@newDoc.txt http://localhost:8080/services/rest/document/upload","operationId":"upload","consumes":["multipart/form-data"],"produces":["text/plain","application/json","application/xml"],"parameters":[{"name":"docId","in":"formData","description":"The ID of an existing document to update","required":false,"type":"integer"},{"name":"folderId","in":"formData","description":"Folder ID where to place the document","required":false,"type":"string"},{"name":"release","in":"formData","description":"Indicates whether to create or not a new major release of an updated document","required":false,"type":"string","enum":["true","false"]},{"name":"filename","in":"formData","description":"File name","required":true,"type":"string"},{"name":"language","in":"formData","description":"Language of the document (ISO 639-2)","required":false,"type":"string","default":"en"},{"name":"filedata","in":"formData","description":"File data","required":true,"type":"file"}],"responses":{"401":{"description":"Authentication failed"},"500":{"description":"Generic error, see the response message"}}}},"/folder/create":{"post":{"tags":["folder"],"summary":"Creates a new folder","description":"The 'folder' metadata comes in the POST request body (encoded as JSON). Note: folder object must specify at least fields name and parentId","operationId":"createFolderByModel","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"The folder metadata","required":true,"schema":{"$ref":"#/definitions/WSFolder"},"x-examples":{"default":"{ \"parentId\": 4, \"name\": \"Folder created by REST ws\"}"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSFolder"}}}}},"/folder/createFolder":{"post":{"tags":["folder"],"summary":"Creates a subfolder","description":"","operationId":"createFolder","consumes":["application/x-www-form-urlencoded"],"produces":["text/plain","application/json","application/xml"],"parameters":[{"name":"parentId","in":"formData","description":"The ID of the parent folder","required":false,"type":"integer","format":"int64"},{"name":"name","in":"formData","description":"Name of the new folder","required":false,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"integer","format":"int64"}}}}},"/folder/createPath":{"post":{"tags":["folder"],"summary":"Creates a path","description":"Creates a path of folders starting from a parent folder. It returns the metadata object representing the latest created folder in the path","operationId":"createPath","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"parentId","in":"formData","description":"The parent folder ID from which the new path will start","required":false,"type":"integer","format":"int64"},{"name":"path","in":"formData","description":"The path to create","required":false,"type":"string","x-example":"How/to/POST/JSON/data/with/Curl"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSFolder"}}}}},"/folder/createSimple":{"post":{"tags":["folder"],"summary":"Creates folders from path","description":"Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path. Example: curl -u admin:admin -X POST -H ''Content-Type: text/plain'' -H ''Accept: application/json'' -d ''/Default/Curl/newfolder'' http://localhost:8080/services/rest/folder/createSimple","operationId":"createSimple","consumes":["text/plain","application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"The string representing the path to be created","required":false,"schema":{"type":"string"},"x-examples":{"default":"/Default/newfolder"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSFolder"}}}}},"/folder/createSimpleForm":{"post":{"tags":["folder"],"summary":"Creates folders from path","description":"Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path","operationId":"createSimpleForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"folderPath","in":"formData","description":"The string representing the path to be created","required":false,"type":"string","x-example":"/Default/newfolder"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSFolder"}}}}},"/folder/createSimpleJSON":{"post":{"tags":["folder"],"summary":"Creates folders from path","description":"Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path","operationId":"createSimpleJSON","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"folderPath","description":"The string representing the path to be created","required":false,"schema":{"type":"string"},"x-examples":{"default":"{\"folderPath\":\"/Default/central/repo\"}"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSFolder"}}}}},"/folder/delete":{"delete":{"tags":["folder"],"summary":"Deletes a folder","description":"","operationId":"deleteFolder","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","description":"The ID of the folder to be deleted","required":true,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/folder/getFolder":{"get":{"tags":["folder"],"summary":"Gets a folder","description":"Gets the folder with the specified ID","operationId":"getFolder","consumes":["application/xml","application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"folderId","in":"query","description":"The folder ID","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSFolder"}}}}},"/folder/getPath":{"get":{"tags":["folder"],"summary":"Gets a path of folders","description":"Returns the folders that make up the path to the folder in input.","operationId":"getPath","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","description":"Folder identifier (ID)","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSFolder"}}}}}},"/folder/getPathString":{"get":{"tags":["folder"],"summary":"Gets a path","description":"Returns the path to the folder in input.","operationId":"getPathString","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","description":"Folder identifier (ID)","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"string"}}}}},"/folder/listChildren":{"get":{"tags":["folder"],"summary":"Lists the child folders","description":"Returns the list of child folders. Example: curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4","operationId":"listChildren","consumes":["application/xml","application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"folderId","in":"query","description":"The ID of the parent folder","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSFolder"}}}}}},"/folder/move":{"put":{"tags":["folder"],"summary":"Moves a folder","description":"Updates a folder by changing its parent. The folder is moved to the new parent folder.","operationId":"move","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","required":false,"type":"integer","format":"int64"},{"name":"parentId","in":"query","required":false,"type":"integer","format":"int64"}],"responses":{"default":{"description":"successful operation"}}}},"/folder/rename":{"put":{"tags":["folder"],"summary":"Renames a folder","description":"Changes the name of a given folder","operationId":"rename","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","required":false,"type":"integer","format":"int64"},{"name":"name","in":"query","required":false,"type":"string"}],"responses":{"default":{"description":"successful operation"}}}},"/folder/update":{"post":{"tags":["folder"],"summary":"Updates a folder","description":"Updates a folder changing its metadata. The folder object in input must specify the property id","operationId":"updateFolder","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"A value object with the metadata of the folder to update","required":false,"schema":{"$ref":"#/definitions/WSFolder"},"x-examples":{"default":"{ \"id\": 2335253, \"name\": \"Folder updated by REST ws\"}"}}],"responses":{"default":{"description":"successful operation"}}}},"/search/find":{"post":{"tags":["search"],"summary":"Search documents","description":"Runs a search on the server","operationId":"find","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Search options","required":true,"schema":{"$ref":"#/definitions/WSSearchOptions"},"x-examples":{"default":"{\"maxHits\":50,\"expression\":\"document management system\",\"expressionLanguage\":\"en\",\"language\":\"en\"}"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/WSSearchResult"}}}}},"/tag/addDocumentTags":{"post":{"tags":["tag"],"summary":"Appends new tags to a document","description":"","operationId":"addDocumentTags","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"docId","in":"formData","description":"Document ID","required":true,"type":"integer","format":"int64"},{"name":"tag","in":"formData","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"default":{"description":"successful operation"}}}},"/tag/addFolderTags":{"post":{"tags":["tag"],"summary":"Appends new tags to a folder","description":"","operationId":"addFolderTags","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"formData","description":"Folder ID","required":true,"type":"integer","format":"int64"},{"name":"tag","in":"formData","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"default":{"description":"successful operation"}}}},"/tag/findDocumentsByTag":{"get":{"tags":["tag"],"summary":"Finds authorized documents for the current user having a specified tag.","description":"","operationId":"findDocumentsByTag","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"tag","in":"query","description":"The tag","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSDocument"}}}}}},"/tag/findFoldersByTag":{"get":{"tags":["tag"],"summary":"Finds authorized folders for the current user having a specified tag.","description":"","operationId":"findFoldersByTag","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"tag","in":"query","description":"The tag","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSFolder"}}}}}},"/tag/getDocumentTags":{"get":{"tags":["tag"],"summary":"Gets all the tags of a document","description":"","operationId":"getDocumentTags","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"docId","in":"query","description":"Document ID","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"string"}}}}}},"/tag/getFolderTags":{"get":{"tags":["tag"],"summary":"Gets all the tags of a folder","description":"","operationId":"getFolderTags","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"query","description":"Folder ID","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"string"}}}}}},"/tag/getTagCloud":{"get":{"tags":["tag"],"summary":"Retrieves all tag clouds in the repository","description":"","operationId":"getTagCloud","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/WSTagCloud"}}}}}},"/tag/getTags":{"get":{"tags":["tag"],"summary":"Gets all the tags used in the sysem","description":"","operationId":"getTags","consumes":["application/xml","application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"type":"string"}}}}}},"/tag/setDocumentTags":{"post":{"tags":["tag"],"summary":"Set the tags of a document","description":"","operationId":"setDocumentTags","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"docId","in":"formData","description":"Document ID","required":true,"type":"integer","format":"int64"},{"name":"tag","in":"formData","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"default":{"description":"successful operation"}}}},"/tag/setFolderTags":{"post":{"tags":["tag"],"summary":"Sets the tags of a folder","description":"","operationId":"setFolderTags","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"folderId","in":"formData","description":"Folder ID","required":true,"type":"integer","format":"int64"},{"name":"tag","in":"formData","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"default":{"description":"successful operation"}}}}},"definitions":{"WSAttribute":{"type":"object","properties":{"name":{"type":"string"},"stringValue":{"type":"string"},"intValue":{"type":"integer","format":"int64"},"doubleValue":{"type":"number","format":"double"},"dateValue":{"type":"string"},"type":{"type":"integer","format":"int32"},"mandatory":{"type":"integer","format":"int32"},"position":{"type":"integer","format":"int32"},"label":{"type":"string"},"editor":{"type":"integer","format":"int32"},"setId":{"type":"integer","format":"int64"},"value":{"type":"object"}},"xml":{"name":"attribute"}},"WSNote":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"docId":{"type":"integer","format":"int64"},"userId":{"type":"integer","format":"int64"},"username":{"type":"string"},"date":{"type":"string","format":"date-time"},"message":{"type":"string"},"page":{"type":"integer","format":"int32"}}},"InputStream":{"type":"object"},"OutputStream":{"type":"object"},"WSFolder":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"},"parentId":{"type":"integer","format":"int64"},"description":{"type":"string"},"lastModified":{"type":"string"},"type":{"type":"integer","format":"int32"},"templateId":{"type":"integer","format":"int64"},"templateLocked":{"type":"integer","format":"int32"},"creation":{"type":"string"},"creator":{"type":"string"},"position":{"type":"integer","format":"int32"},"hidden":{"type":"integer","format":"int32"},"foldRef":{"type":"integer","format":"int64"},"attributes":{"type":"array","items":{"$ref":"#/definitions/WSAttribute"}},"storage":{"type":"integer","format":"int32"},"tags":{"type":"array","items":{"type":"string"}}},"xml":{"name":"folder"}},"WSDocument":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"fileSize":{"type":"integer","format":"int64"},"status":{"type":"integer","format":"int32"},"exportStatus":{"type":"integer","format":"int32"},"title":{"type":"string"},"version":{"type":"string"},"fileVersion":{"type":"string"},"date":{"type":"string"},"publisher":{"type":"string"},"publisherId":{"type":"integer","format":"int64"},"creator":{"type":"string"},"creatorId":{"type":"integer","format":"int64"},"type":{"type":"string"},"lockUserId":{"type":"integer","format":"int64"},"creation":{"type":"string"},"fileName":{"type":"string"},"indexed":{"type":"integer","format":"int32"},"signed":{"type":"integer","format":"int32"},"stamped":{"type":"integer","format":"int32"},"tags":{"type":"array","items":{"type":"string"}},"folderId":{"type":"integer","format":"int64"},"templateId":{"type":"integer","format":"int64"},"customId":{"type":"string"},"immutable":{"type":"integer","format":"int32"},"digest":{"type":"string"},"exportName":{"type":"string"},"exportId":{"type":"integer","format":"int64"},"docRef":{"type":"integer","format":"int64"},"docRefType":{"type":"string"},"deleteUserId":{"type":"integer","format":"int64"},"attributes":{"type":"array","items":{"$ref":"#/definitions/WSAttribute"}},"language":{"type":"string"},"summary":{"type":"string"},"score":{"type":"integer","format":"int32"},"icon":{"type":"string"},"path":{"type":"string"},"comment":{"type":"string"},"lastModified":{"type":"string"},"rating":{"type":"integer","format":"int32"},"workflowStatus":{"type":"string"},"published":{"type":"integer","format":"int32"},"startPublishing":{"type":"string"},"stopPublishing":{"type":"string"},"pages":{"type":"integer","format":"int32"},"nature":{"type":"integer","format":"int32"},"formId":{"type":"integer","format":"int64"},"passwordProtected":{"type":"integer","format":"int32"}},"xml":{"name":"document"}},"DataHandler":{"type":"object","properties":{"dataSource":{"$ref":"#/definitions/DataSource"},"name":{"type":"string"},"inputStream":{"$ref":"#/definitions/InputStream"},"content":{"type":"object"},"contentType":{"type":"string"},"outputStream":{"$ref":"#/definitions/OutputStream"},"allCommands":{"type":"array","items":{"$ref":"#/definitions/CommandInfo"}},"preferredCommands":{"type":"array","items":{"$ref":"#/definitions/CommandInfo"}},"transferDataFlavors":{"type":"array","items":{"$ref":"#/definitions/DataFlavor"}}}},"WSSearchResult":{"type":"object","properties":{"time":{"type":"integer","format":"int64"},"estimatedHitsNumber":{"type":"integer","format":"int64"},"hits":{"type":"array","items":{"$ref":"#/definitions/WSDocument"}},"moreHits":{"type":"integer","format":"int32"},"totalHits":{"type":"integer","format":"int32"}}},"WSSearchOptions":{"type":"object","properties":{"maxHits":{"type":"integer","format":"int32"},"type":{"type":"integer","format":"int32"},"expression":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"topOperator":{"type":"string"},"caseSensitive":{"type":"integer","format":"int32"},"retrieveAliases":{"type":"integer","format":"int32"},"filterIds":{"type":"array","items":{"type":"integer","format":"int64"}},"folderId":{"type":"integer","format":"int64"},"expressionLanguage":{"type":"string"},"sizeMin":{"type":"integer","format":"int64"},"sizeMax":{"type":"integer","format":"int64"},"format":{"type":"string"},"fields":{"type":"array","items":{"type":"string"}},"language":{"type":"string"},"dateFrom":{"type":"string"},"dateTo":{"type":"string"},"creationFrom":{"type":"string"},"creationTo":{"type":"string"},"template":{"type":"integer","format":"int64"}},"xml":{"name":"searchoptions"}},"DataFlavor":{"type":"object","properties":{"mimeType":{"type":"string"},"humanPresentableName":{"type":"string"},"subType":{"type":"string"},"defaultRepresentationClassAsString":{"type":"string"},"primaryType":{"type":"string"},"flavorJavaFileListType":{"type":"boolean","default":false},"flavorRemoteObjectType":{"type":"boolean","default":false},"flavorSerializedObjectType":{"type":"boolean","default":false},"flavorTextType":{"type":"boolean","default":false},"mimeTypeSerializedObject":{"type":"boolean","default":false},"representationClassByteBuffer":{"type":"boolean","default":false},"representationClassCharBuffer":{"type":"boolean","default":false},"representationClassInputStream":{"type":"boolean","default":false},"representationClassReader":{"type":"boolean","default":false},"representationClassRemote":{"type":"boolean","default":false},"representationClassSerializable":{"type":"boolean","default":false}}},"DataSource":{"type":"object","properties":{"name":{"type":"string"},"inputStream":{"$ref":"#/definitions/InputStream"},"contentType":{"type":"string"},"outputStream":{"$ref":"#/definitions/OutputStream"}}},"CommandInfo":{"type":"object","properties":{"commandName":{"type":"string"},"commandClass":{"type":"string"}}},"WSBookmark":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"userId":{"type":"integer","format":"int64"},"targetId":{"type":"integer","format":"int64"},"title":{"type":"string"},"description":{"type":"string"},"position":{"type":"integer","format":"int32"},"fileType":{"type":"string"},"type":{"type":"integer","format":"int32"}}},"WSTagCloud":{"type":"object","properties":{"tag":{"type":"string"},"count":{"type":"integer","format":"int64"},"scale":{"type":"integer","format":"int32"}}},"WSRating":{"type":"object","properties":{"docId":{"type":"integer","format":"int64"},"userId":{"type":"integer","format":"int64"},"username":{"type":"string"},"date":{"type":"string","format":"date-time"},"vote":{"type":"integer","format":"int32"}}}}}]]></con:content><con:type>https://swagger.io/swagger2/specification</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint></con:endpoints><con:resource name="/bookmark/bookmarkDocument" path="/bookmark/bookmarkDocument" id="37943158-a67c-4567-b128-b17413eef76b"><con:settings/><con:parameters/><con:method name="bookmarkDocument" id="8cf1d585-f831-4e2d-8872-aaaaad4f0d86" method="GET"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="939d8eb1-1eef-4bc7-b015-6320b901ca1c" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/bookmarkFolder" path="/bookmark/bookmarkFolder" id="7d92ba39-9a43-44a0-ad18-ba45d3b93422"><con:settings/><con:parameters/><con:method name="bookmarkFolder" id="73033bfd-9e89-4893-9e81-1e8c03fb9624" method="GET"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="db773464-6f61-48c9-9295-9575b976a6ec" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/deleteBookmark" path="/bookmark/deleteBookmark" id="6dd5299f-ee1c-4f2f-9822-e663a3bf600b"><con:settings/><con:parameters/><con:method name="deleteBookmark" id="10618ac7-7932-4fa4-aefa-8cbd27063eef" method="DELETE"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>bookmarkId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c1c6eed6-7f7a-49f6-88f0-618b56875938" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/getBookmarks" path="/bookmark/getBookmarks" id="5065f3a7-04f1-4385-b83b-4d07553a83fd"><con:settings/><con:parameters/><con:method name="getBookmarks" id="20c61981-ba79-4411-bc3c-ba2229de3b84" method="GET"><con:description>&#13;
</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="d45746a6-4e55-4b88-b212-098821151851" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/saveBookmark" path="/bookmark/saveBookmark" id="319b82d3-12c2-4933-98bb-fcf6fd340dce"><con:settings/><con:parameters/><con:method name="saveBookmark" id="bc4932f8-1fee-4f54-a5b9-0b937ceb0652" method="POST"><con:description>&#13;
</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:sampleContent><![CDATA[<WSBookmark>
   <id>0</id>
   <userId>0</userId>
   <targetId>0</targetId>
   <title>string</title>
   <description>string</description>
   <position>0</position>
   <fileType>string</fileType>
   <type>0</type>
</WSBookmark>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="17eaac03-d659-44a6-84a1-67e577d42746" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request><![CDATA[<WSBookmark>\r
   <id>0</id>\r
   <userId>0</userId>\r
   <targetId>0</targetId>\r
   <title>string</title>\r
   <description>string</description>\r
   <position>0</position>\r
   <fileType>string</fileType>\r
   <type>0</type>\r
</WSBookmark>]]></con:request><con:parameters/></con:request><con:request name="Request 2" id="c0f7bdff-f69b-400a-8872-da36409fdc1f" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{\r
  "id" : 0,\r
  "userId" : 0,\r
  "targetId" : 0,\r
  "title" : "string",\r
  "description" : "string",\r
  "position" : 0,\r
  "fileType" : "string",\r
  "type" : 0\r
}</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/unbookmarkDocument" path="/bookmark/unbookmarkDocument" id="32d9cce1-11d2-44e8-b301-e4f4cfb3c384"><con:settings/><con:parameters/><con:method name="unbookmarkDocument" id="74da22f5-cdd0-435c-b59b-12e69bcae700" method="DELETE"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="9b7ac4db-3fa1-4468-bb11-bff7dce978ef" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/unbookmarkFolder" path="/bookmark/unbookmarkFolder" id="3d7adf5d-002f-4946-bbc0-b20f9b29e4cc"><con:settings/><con:parameters/><con:method name="unbookmarkFolder" id="4ad48e3a-367d-4ed1-b40c-61f58d0043c5" method="DELETE"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="9329b192-ccd9-4cab-88fa-1861ba0f8156" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/addNote" path="/document/addNote" id="4206b269-b7bb-454c-b302-16694a8a0d7b"><con:settings/><con:parameters/><con:method name="addNote" id="b6a9f3f5-1f8f-4095-a27d-aa92d5f2a0dc" method="POST"><con:description>&#13;
Adds a new note for the given document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter required="true"><con:name>note</con:name><con:style>QUERY</con:style><con:description>Text of the note to add</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "docId" : 0,&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "message" : "string",&#13;
  "page" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="64a3372e-d30d-46d4-b2bf-4f98e321bbc6" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/checkin" path="/document/checkin" id="6ab01612-6ebc-458f-ad60-7ada54b1aa48"><con:settings/><con:parameters/><con:method name="checkin" id="38b0e6b2-e52f-4a54-bbbe-c8a8817e497d" method="POST"><con:description>Performs a check-in (commit) operation of new content over an existing document. The document must be in checked-out status&#13;
Check-in an existing document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of an existing document to update</con:description></con:parameter><con:parameter><con:name>comment</con:name><con:style>QUERY</con:style><con:description>An optional comment</con:description></con:parameter><con:parameter><con:name>release</con:name><con:style>QUERY</con:style><con:description>Indicates whether to create or not a new major release of the updated document</con:description></con:parameter><con:parameter required="true"><con:name>filename</con:name><con:style>QUERY</con:style><con:description>File name</con:description></con:parameter><con:parameter required="true"><con:name>filedata</con:name><con:style>QUERY</con:style><con:description>File data</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="3c659eb4-9e34-4db1-a9fc-8feffc774b9a" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/checkout" path="/document/checkout" id="6f36778b-8983-4f50-9f8a-adc648b42ce4"><con:settings/><con:parameters/><con:method name="checkout" id="75135000-a9df-41f5-9db6-98b938a9496d" method="POST"><con:description>Performs the checkout operation on a document. The document status will be changed to checked-out&#13;
Checkout a document</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e1c4eb93-c2f7-4b46-adda-d26c55bfa80c" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/create" path="/document/create" id="d2a6c59c-c516-4f29-9ca6-23495499630f"><con:settings/><con:parameters/><con:method name="createDocument" id="a23faf5f-330b-4d30-8294-dcedc5b7d4f2" method="POST"><con:description>Creates a new document using the metadata document object provided as JSON/XML&#13;
Creates a new document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>document</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>content</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "title" : "string",&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "path" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e053a016-95f3-421a-b6c8-414f36fef475" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/document/create</con:originalUri><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:attachment><con:name>propertie.txt</con:name><con:contentType>text/plain</con:contentType><con:size>7</con:size><con:contentId>content</con:contentId><con:url>C:/formation/projet2/propertie.txt</con:url><con:data>UEsDBBQACAgIACp4iFUAAAAAAAAAAAAAAAANAAAAcHJvcGVydGllLnR4dAtxDQ7h5OUCAFBLBwg3CBV0CQAAAAcAAABQSwECFAAUAAgICAAqeIhVNwgVdAkAAAAHAAAADQAAAAAAAAAAAAAAAAAAAAAAcHJvcGVydGllLnR4dFBLBQYAAAAAAQABADsAAABEAAAAAAA=</con:data><con:id>1bece863-ddb1-4375-a57c-4b966146f6c2</con:id></con:attachment><con:attachment><con:name>payload.json</con:name><con:contentType>text/javascript</con:contentType><con:size>140</con:size><con:contentId>payload.json</con:contentId><con:url>C:/formation/projet2/payload.json</con:url><con:data>UEsDBBQACAgIAJCBiFUAAAAAAAAAAAAAAAAMAAAAcGF5bG9hZC5qc29uq1ZQykxRslIw0lFQSsvMSQ3OrEoFci2A3JLMkhwQW6kktbgEDJSAoimJJWBBIwMjI11DI10DCwUDSytjMysjA5B0SWUBRE8FWDXISL/EXLBQQVF+QWpRSWaqHkwyPycltcgTZL2hgaFCLQBQSwcIebWf0GsAAACMAAAAUEsBAhQAFAAICAgAkIGIVXm1n9BrAAAAjAAAAAwAAAAAAAAAAAAAAAAAAAAAAHBheWxvYWQuanNvblBLBQYAAAAAAQABADoAAAClAAAAAAA=</con:data><con:id>a347c4a1-0d8b-4ff7-9be6-e6ca0f4a5535</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="document" value="file:payload.json"/><con:entry key="content" value="file:propertie.txt"/></con:parameters><con:parameterOrder><con:entry>document</con:entry><con:entry>content</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/document/delete" path="/document/delete" id="6bfaeed5-4946-4be9-be2b-0ae0a4219d15"><con:settings/><con:parameters/><con:method name="delete" id="6220ddc8-15f2-4340-bbac-8c7a14c3e954" method="DELETE"><con:description>&#13;
Deletes a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID to delete</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="8fcde29e-b614-4b14-ac35-4e94f5b3c550" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/deleteNote" path="/document/deleteNote" id="d8871322-5c6f-4add-8daa-16c788d4fc64"><con:settings/><con:parameters/><con:method name="deleteNote" id="acb4835d-aaa2-41e9-b5de-1f8ade5d1c57" method="DELETE"><con:description>&#13;
Deletes a note</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>noteId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>ID of the note to delete</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="fc3e9c3c-61b5-4714-8068-aac073734925" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/deleteVersion" path="/document/deleteVersion" id="47d9be30-e6b2-4b71-9f28-3309b7583adb"><con:settings/><con:parameters/><con:method name="deleteVersion" id="06223c65-1602-4c0d-a845-f371f74e6929" method="DELETE"><con:description>Deletes the version of a document using the document ID and version. You can not delete the latest version of a document. Returns the latest version of the document&#13;
Delete the version of a document</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>"string"</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="f4c90e45-5c64-4551-8617-9d07646d2bf5" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getContent" path="/document/getContent" id="d0e78b22-c72b-40b5-821b-4b45a1564419"><con:settings/><con:parameters/><con:method name="getContent" id="c00cdd77-900a-42b2-acb6-b6a6453f2924" method="GET"><con:description>Returns the content of a document using the document ID in input&#13;
Gets the document content</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/octet-stream</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c02d08ba-344d-4c89-852d-1de5fc42d7b7" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getDocument" path="/document/getDocument" id="7b1686ed-4166-4006-b680-96106896a9ca"><con:settings/><con:parameters/><con:method name="getDocument" id="ebbb539e-17f5-45e1-8469-de3821a57eec" method="GET"><con:description>Gets the document metadata&#13;
Gets document metadata</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>date</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "title" : "string",&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "path" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent><![CDATA[<document>
   <id>0</id>
   <fileSize>0</fileSize>
   <status>0</status>
   <exportStatus>0</exportStatus>
   <title>string</title>
   <version>string</version>
   <fileVersion>string</fileVersion>
   <date>string</date>
   <publisher>string</publisher>
   <publisherId>0</publisherId>
   <creator>string</creator>
   <creatorId>0</creatorId>
   <type>string</type>
   <lockUserId>0</lockUserId>
   <creation>string</creation>
   <fileName>string</fileName>
   <indexed>0</indexed>
   <signed>0</signed>
   <stamped>0</stamped>
   <tags>string</tags>
   <folderId>0</folderId>
   <templateId>0</templateId>
   <customId>string</customId>
   <immutable>0</immutable>
   <digest>string</digest>
   <exportName>string</exportName>
   <exportId>0</exportId>
   <docRef>0</docRef>
   <docRefType>string</docRefType>
   <deleteUserId>0</deleteUserId>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <Value/>
   </attribute>
   <language>string</language>
   <summary>string</summary>
   <score>0</score>
   <icon>string</icon>
   <path>string</path>
   <comment>string</comment>
   <lastModified>string</lastModified>
   <rating>0</rating>
   <workflowStatus>string</workflowStatus>
   <published>0</published>
   <startPublishing>string</startPublishing>
   <stopPublishing>string</stopPublishing>
   <pages>0</pages>
   <nature>0</nature>
   <formId>0</formId>
   <passwordProtected>0</passwordProtected>
</document>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="6ecb055d-6395-4308-8437-f78cb88964e1" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>date</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/document/getNotes" path="/document/getNotes" id="3618ac3f-93d2-458d-aba0-b3966d900dac"><con:settings/><con:parameters/><con:method name="getNotes" id="4d5272af-cb52-4600-9d8f-309de642bf4e" method="GET"><con:description>&#13;
Gets all the notes of a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "docId" : 0,&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "message" : "string",&#13;
  "page" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="7cb6766b-dee0-46c8-bee3-6f09dcfe0983" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getRatings" path="/document/getRatings" id="6aac0e54-e1ef-4010-8d04-1aad36d5d783"><con:settings/><con:parameters/><con:method name="getRatings" id="1e1c6ae4-f936-45df-adda-8bcb16f55ca7" method="GET"><con:description>&#13;
Retrieves the different ratings of a focuments</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "docId" : 0,&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "vote" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="212c1abd-50b9-4883-8c22-e735395ea8d9" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getVersionContent" path="/document/getVersionContent" id="7af200c2-4ff8-4edb-acd8-3e040eff31ae"><con:settings/><con:parameters/><con:method name="getVersionContent" id="93863d34-6502-4c0f-bfa1-40c8d734df6c" method="GET"><con:description>Returns the content of a document using the document ID and version&#13;
Gets the document content by version</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/octet-stream</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="01ec859f-601c-4d33-88fb-7c4e705538dc" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/list" path="/document/list" id="0e0f622f-14b9-481e-8518-6d8158c6173a"><con:settings/><con:parameters/><con:method name="list" id="34a17b97-588d-4cfc-98b4-c9d85b50d42d" method="GET"><con:description>Lists Documents by folder identifier&#13;
Lists documents by folder</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "title" : "string",&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "path" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="7c16b83c-818c-4972-8b46-b8c6615bd52b" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/listDocuments" path="/document/listDocuments" id="fb095bde-53c0-438c-ad7b-6251a2b494e0"><con:settings/><con:parameters/><con:method name="listDocuments" id="8d836b46-b609-400e-a53e-4a0080932554" method="GET"><con:description>Lists Documents by folder ID filtering the results by filename&#13;
Lists documents by folder and filename</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>fileName</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "title" : "string",&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "path" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="addb36b2-ad03-434f-8c4f-a0836097fbe2" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/rateDocument" path="/document/rateDocument" id="d0a7a841-a008-4e41-a247-c402c33d5838"><con:settings/><con:parameters/><con:method name="rateDocument" id="91b8a03c-c0e2-4c8b-85a4-b407e6ca3d05" method="GET"><con:description>&#13;
Add/Update the user's vote for a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter required="true"><con:name>vote</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The user's vote</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "docId" : 0,&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "vote" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c57ac07a-3477-46d3-8d1a-5f49d90f41c4" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/update" path="/document/update" id="859306a7-a745-46ec-ba99-99677298fd60"><con:settings/><con:parameters/><con:method name="update" id="7188d6ee-65f9-4260-a060-ee00ced20cc7" method="PUT"><con:description>Updates the metadata of an existing document. The ID of the document must be specified in the WSDocument value object. The provided example moves document with ID 1111111 to folder 3435433&#13;
Updates an existing document</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:sampleContent><![CDATA[<WSDocument>
   <id>0</id>
   <fileSize>0</fileSize>
   <status>0</status>
   <exportStatus>0</exportStatus>
   <title>string</title>
   <version>string</version>
   <fileVersion>string</fileVersion>
   <date>string</date>
   <publisher>string</publisher>
   <publisherId>0</publisherId>
   <creator>string</creator>
   <creatorId>0</creatorId>
   <type>string</type>
   <lockUserId>0</lockUserId>
   <creation>string</creation>
   <fileName>string</fileName>
   <indexed>0</indexed>
   <signed>0</signed>
   <stamped>0</stamped>
   <tags>string</tags>
   <folderId>0</folderId>
   <templateId>0</templateId>
   <customId>string</customId>
   <immutable>0</immutable>
   <digest>string</digest>
   <exportName>string</exportName>
   <exportId>0</exportId>
   <docRef>0</docRef>
   <docRefType>string</docRefType>
   <deleteUserId>0</deleteUserId>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <Value/>
   </attribute>
   <language>string</language>
   <summary>string</summary>
   <score>0</score>
   <icon>string</icon>
   <path>string</path>
   <comment>string</comment>
   <lastModified>string</lastModified>
   <rating>0</rating>
   <workflowStatus>string</workflowStatus>
   <published>0</published>
   <startPublishing>string</startPublishing>
   <stopPublishing>string</stopPublishing>
   <pages>0</pages>
   <nature>0</nature>
   <formId>0</formId>
   <passwordProtected>0</passwordProtected>
</WSDocument>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "title" : "string",&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "path" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="bff05579-41ae-40be-b532-4f3477355170" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request><![CDATA[<WSDocument>\r
   <id>0</id>\r
   <fileSize>0</fileSize>\r
   <status>0</status>\r
   <exportStatus>0</exportStatus>\r
   <title>string</title>\r
   <version>string</version>\r
   <fileVersion>string</fileVersion>\r
   <date>string</date>\r
   <publisher>string</publisher>\r
   <publisherId>0</publisherId>\r
   <creator>string</creator>\r
   <creatorId>0</creatorId>\r
   <type>string</type>\r
   <lockUserId>0</lockUserId>\r
   <creation>string</creation>\r
   <fileName>string</fileName>\r
   <indexed>0</indexed>\r
   <signed>0</signed>\r
   <stamped>0</stamped>\r
   <tags>string</tags>\r
   <folderId>0</folderId>\r
   <templateId>0</templateId>\r
   <customId>string</customId>\r
   <immutable>0</immutable>\r
   <digest>string</digest>\r
   <exportName>string</exportName>\r
   <exportId>0</exportId>\r
   <docRef>0</docRef>\r
   <docRefType>string</docRefType>\r
   <deleteUserId>0</deleteUserId>\r
   <attribute>\r
      <name>string</name>\r
      <stringValue>string</stringValue>\r
      <intValue>0</intValue>\r
      <doubleValue>1.100000023841858</doubleValue>\r
      <dateValue>string</dateValue>\r
      <type>0</type>\r
      <mandatory>0</mandatory>\r
      <position>0</position>\r
      <label>string</label>\r
      <editor>0</editor>\r
      <setId>0</setId>\r
      <Value/>\r
   </attribute>\r
   <language>string</language>\r
   <summary>string</summary>\r
   <score>0</score>\r
   <icon>string</icon>\r
   <path>string</path>\r
   <comment>string</comment>\r
   <lastModified>string</lastModified>\r
   <rating>0</rating>\r
   <workflowStatus>string</workflowStatus>\r
   <published>0</published>\r
   <startPublishing>string</startPublishing>\r
   <stopPublishing>string</stopPublishing>\r
   <pages>0</pages>\r
   <nature>0</nature>\r
   <formId>0</formId>\r
   <passwordProtected>0</passwordProtected>\r
</WSDocument>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request><con:request name="Request 2" id="1b1ca8d0-b6a1-4623-9d1e-52aa547e8d9d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{\r
  "id" : 0,\r
  "fileSize" : 0,\r
  "status" : 0,\r
  "exportStatus" : 0,\r
  "title" : "string",\r
  "version" : "string",\r
  "fileVersion" : "string",\r
  "date" : "string",\r
  "publisher" : "string",\r
  "publisherId" : 0,\r
  "creator" : "string",\r
  "creatorId" : 0,\r
  "type" : "string",\r
  "lockUserId" : 0,\r
  "creation" : "string",\r
  "fileName" : "string",\r
  "indexed" : 0,\r
  "signed" : 0,\r
  "stamped" : 0,\r
  "tags" : [ "string" ],\r
  "folderId" : 0,\r
  "templateId" : 0,\r
  "customId" : "string",\r
  "immutable" : 0,\r
  "digest" : "string",\r
  "exportName" : "string",\r
  "exportId" : 0,\r
  "docRef" : 0,\r
  "docRefType" : "string",\r
  "deleteUserId" : 0,\r
  "attributes" : [ {\r
    "name" : "string",\r
    "stringValue" : "string",\r
    "intValue" : 0,\r
    "doubleValue" : 1.100000023841858,\r
    "dateValue" : "string",\r
    "type" : 0,\r
    "mandatory" : 0,\r
    "position" : 0,\r
    "label" : "string",\r
    "editor" : 0,\r
    "setId" : 0,\r
    "value" : { }\r
  } ],\r
  "language" : "string",\r
  "summary" : "string",\r
  "score" : 0,\r
  "icon" : "string",\r
  "path" : "string",\r
  "comment" : "string",\r
  "lastModified" : "string",\r
  "rating" : 0,\r
  "workflowStatus" : "string",\r
  "published" : 0,\r
  "startPublishing" : "string",\r
  "stopPublishing" : "string",\r
  "pages" : 0,\r
  "nature" : 0,\r
  "formId" : 0,\r
  "passwordProtected" : 0\r
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/upload" path="/document/upload" id="471d38e9-0f4b-4059-bcf9-aa39ecd76e81"><con:settings/><con:parameters/><con:method name="upload" id="be4ac1af-37a0-4980-9647-aad053a6c743" method="POST"><con:description>Creates or updates an existing document, if used in update mode docId must be provided, when used in create mode folderId is required. Returns the ID of the created/updated document. &amp;lt;br/&amp;gt;Example: curl -u admin:admin -H ''Accept: application/json'' -X POST -F folderId=4 -F filename=newDoc.txt -F filedata=@newDoc.txt http://localhost:8080/services/rest/document/upload&#13;
Uploads a document</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of an existing document to update</con:description></con:parameter><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:description>Folder ID where to place the document</con:description></con:parameter><con:parameter><con:name>release</con:name><con:style>QUERY</con:style><con:description>Indicates whether to create or not a new major release of an updated document</con:description></con:parameter><con:parameter required="true"><con:name>filename</con:name><con:style>QUERY</con:style><con:description>File name</con:description></con:parameter><con:parameter><con:name>language</con:name><con:value>en</con:value><con:style>QUERY</con:style><con:default>en</con:default><con:description>Language of the document (ISO 639-2)</con:description></con:parameter><con:parameter required="true"><con:name>filedata</con:name><con:style>QUERY</con:style><con:description>File data</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="09d94586-f7f0-4aa3-94bd-41ddda96dbf2" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/create" path="/folder/create" id="f886c3bf-8ad8-4688-aa6f-23d5f0d246fc"><con:settings/><con:parameters/><con:method name="createFolderByModel" id="118f4853-4624-4dbd-a356-816006f916ff" method="POST"><con:description>The 'folder' metadata comes in the POST request body (encoded as JSON). Note: folder object must specify at least fields name and parentId&#13;
Creates a new folder</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:sampleContent><![CDATA[<WSFolder>
   <id>0</id>
   <name>string</name>
   <parentId>0</parentId>
   <description>string</description>
   <lastModified>string</lastModified>
   <type>0</type>
   <templateId>0</templateId>
   <templateLocked>0</templateLocked>
   <creation>string</creation>
   <creator>string</creator>
   <position>0</position>
   <hidden>0</hidden>
   <foldRef>0</foldRef>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <Value/>
   </attribute>
   <storage>0</storage>
   <tags>string</tags>
</WSFolder>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="f8f3a4ca-940f-47c1-a817-030ca78dd34f" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request><![CDATA[<WSFolder>\r
   <id>0</id>\r
   <name>string</name>\r
   <parentId>0</parentId>\r
   <description>string</description>\r
   <lastModified>string</lastModified>\r
   <type>0</type>\r
   <templateId>0</templateId>\r
   <templateLocked>0</templateLocked>\r
   <creation>string</creation>\r
   <creator>string</creator>\r
   <position>0</position>\r
   <hidden>0</hidden>\r
   <foldRef>0</foldRef>\r
   <attribute>\r
      <name>string</name>\r
      <stringValue>string</stringValue>\r
      <intValue>0</intValue>\r
      <doubleValue>1.100000023841858</doubleValue>\r
      <dateValue>string</dateValue>\r
      <type>0</type>\r
      <mandatory>0</mandatory>\r
      <position>0</position>\r
      <label>string</label>\r
      <editor>0</editor>\r
      <setId>0</setId>\r
      <Value/>\r
   </attribute>\r
   <storage>0</storage>\r
   <tags>string</tags>\r
</WSFolder>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request><con:request name="Request 2" id="4f8f7b1c-5620-4cef-b85f-01457ddbdf33" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{\r
  "id" : 0,\r
  "name" : "string",\r
  "parentId" : 0,\r
  "description" : "string",\r
  "lastModified" : "string",\r
  "type" : 0,\r
  "templateId" : 0,\r
  "templateLocked" : 0,\r
  "creation" : "string",\r
  "creator" : "string",\r
  "position" : 0,\r
  "hidden" : 0,\r
  "foldRef" : 0,\r
  "attributes" : [ {\r
    "name" : "string",\r
    "stringValue" : "string",\r
    "intValue" : 0,\r
    "doubleValue" : 1.100000023841858,\r
    "dateValue" : "string",\r
    "type" : 0,\r
    "mandatory" : 0,\r
    "position" : 0,\r
    "label" : "string",\r
    "editor" : 0,\r
    "setId" : 0,\r
    "value" : { }\r
  } ],\r
  "storage" : 0,\r
  "tags" : [ "string" ]\r
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createFolder" path="/folder/createFolder" id="5f98ef56-211a-46ca-a255-2723c20ee259"><con:settings/><con:parameters/><con:method name="createFolder" id="a5613af1-ac9e-4868-95c6-e58841aa3d3c" method="POST"><con:description>&#13;
Creates a subfolder</con:description><con:settings/><con:parameters><con:parameter><con:name>parentId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of the parent folder</con:description></con:parameter><con:parameter><con:name>name</con:name><con:style>QUERY</con:style><con:description>Name of the new folder</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>0</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>0</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>&lt;long>0&lt;/long></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="39b71a84-66d4-466d-9928-50c3556af821" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createPath" path="/folder/createPath" id="1b37634b-acaf-4583-8fac-647f740e7d51"><con:settings/><con:parameters/><con:method name="createPath" id="d088ea63-1066-4736-adcb-4faf5cb4eb8d" method="POST"><con:description>Creates a path of folders starting from a parent folder. It returns the metadata object representing the latest created folder in the path&#13;
Creates a path</con:description><con:settings/><con:parameters><con:parameter><con:name>parentId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The parent folder ID from which the new path will start</con:description></con:parameter><con:parameter><con:name>path</con:name><con:style>QUERY</con:style><con:description>The path to create</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="1c7a3881-e623-435d-9fda-d4de94ee8f68" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createSimple" path="/folder/createSimple" id="800f27cc-846e-435a-a080-fdca4d7391c3"><con:settings/><con:parameters/><con:method name="createSimple" id="c0abfbd0-9132-486b-a2f1-adc531e2f8c3" method="POST"><con:description>Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path. Example: curl -u admin:admin -X POST -H ''Content-Type: text/plain'' -H ''Accept: application/json'' -d ''/Default/Curl/newfolder'' http://localhost:8080/services/rest/folder/createSimple&#13;
Creates folders from path</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>text/plain</con:mediaType><con:params/><con:sampleContent/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{ }</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>text/plain</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="6250c815-9ab0-4419-a39f-918c3cced2fb" mediaType="text/plain" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request><con:request name="Request 2" id="27c7a010-93d6-4ad5-a0b5-3819e9db9030" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{ }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createSimpleForm" path="/folder/createSimpleForm" id="78312bd7-bfce-4624-a38e-2a14cdd1dc81"><con:settings/><con:parameters/><con:method name="createSimpleForm" id="80c346fc-9d27-4a1f-aa87-cad9362193e4" method="POST"><con:description>Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path&#13;
Creates folders from path</con:description><con:settings/><con:parameters><con:parameter><con:name>folderPath</con:name><con:style>QUERY</con:style><con:description>The string representing the path to be created</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="710bf140-e76a-443d-8b57-4e9000c5dc91" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createSimpleJSON" path="/folder/createSimpleJSON" id="07b1f782-8522-444e-8139-14bb4815d2a4"><con:settings/><con:parameters/><con:method name="createSimpleJSON" id="e9661911-8ed3-4bfe-a823-18ec77318db3" method="POST"><con:description>Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path&#13;
Creates folders from path</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{ }</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="05c30646-ef5a-464f-95d7-04ad1dbc5246" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{ }</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/delete" path="/folder/delete" id="7773f87d-3199-4a3c-af2d-8ed83999c181"><con:settings/><con:parameters/><con:method name="deleteFolder" id="3374e572-d9c5-4ddb-a08e-8ce0d4d00332" method="DELETE"><con:description>&#13;
Deletes a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of the folder to be deleted</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="7e7cb53b-22c2-48c0-8c98-59a9ffdd72bb" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/getFolder" path="/folder/getFolder" id="f9d96322-be43-4a55-8abe-ade5940425ee"><con:settings/><con:parameters/><con:method name="getFolder" id="4ef77478-39d6-4cb1-a9e8-db3f7c6314c5" method="GET"><con:description>Gets the folder with the specified ID&#13;
Gets a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The folder ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent><![CDATA[<folder>
   <id>0</id>
   <name>string</name>
   <parentId>0</parentId>
   <description>string</description>
   <lastModified>string</lastModified>
   <type>0</type>
   <templateId>0</templateId>
   <templateLocked>0</templateLocked>
   <creation>string</creation>
   <creator>string</creator>
   <position>0</position>
   <hidden>0</hidden>
   <foldRef>0</foldRef>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <Value/>
   </attribute>
   <storage>0</storage>
   <tags>string</tags>
</folder>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="d2e52f33-55cb-4203-b2dc-c0e3a5505519" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/getPath" path="/folder/getPath" id="94e526ba-1f53-4af6-8e54-c1340d102bc2"><con:settings/><con:parameters/><con:method name="getPath" id="7b0e77e9-81f3-4098-8b64-ccb1aa71c34d" method="GET"><con:description>Returns the folders that make up the path to the folder in input.&#13;
Gets a path of folders</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder identifier (ID)</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="48a065c3-601f-4584-89d0-8e1ed7d6be98" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/getPathString" path="/folder/getPathString" id="96faae28-3e79-434f-b2ea-77d65823c5d6"><con:settings/><con:parameters/><con:method name="getPathString" id="fe199cef-edae-4a7d-848e-40579173833f" method="GET"><con:description>Returns the path to the folder in input.&#13;
Gets a path</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder identifier (ID)</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>"string"</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="3d897e53-dbf5-4379-a75b-c89b1a825e12" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/listChildren" path="/folder/listChildren" id="d71f2efb-1532-43a3-9553-ca20d43fcd5c"><con:settings/><con:parameters/><con:method name="listChildren" id="91238ae7-1e3d-4c51-af3f-a7d359bf1e1f" method="GET"><con:description>Returns the list of child folders. Example: curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4&#13;
Lists the child folders</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of the parent folder</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
} ]</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent><![CDATA[<folder>
   <id>0</id>
   <name>string</name>
   <parentId>0</parentId>
   <description>string</description>
   <lastModified>string</lastModified>
   <type>0</type>
   <templateId>0</templateId>
   <templateLocked>0</templateLocked>
   <creation>string</creation>
   <creator>string</creator>
   <position>0</position>
   <hidden>0</hidden>
   <foldRef>0</foldRef>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <Value/>
   </attribute>
   <storage>0</storage>
   <tags>string</tags>
</folder>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="3463d576-17f9-457d-8f1b-9036ff4520f9" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/move" path="/folder/move" id="7dcd9799-c003-4197-ab2e-f806c8bb3ac7"><con:settings/><con:parameters/><con:method name="move" id="2e2fb0ee-e93f-4d32-b090-8ac089d89252" method="PUT"><con:description>Updates a folder by changing its parent. The folder is moved to the new parent folder.&#13;
Moves a folder</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>parentId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e4f482f3-9b6f-46f0-9e36-0e2b8ab74021" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/rename" path="/folder/rename" id="829e2afd-dbc8-4cfa-ba6b-598562c05e8e"><con:settings/><con:parameters/><con:method name="rename" id="6fa2411b-2e66-48c7-97da-72cde29f754d" method="PUT"><con:description>Changes the name of a given folder&#13;
Renames a folder</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="3a0a0f2c-ba52-49df-a528-d0cd14561d7b" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/update" path="/folder/update" id="a4739b42-c316-484c-8102-171894a95897"><con:settings/><con:parameters/><con:method name="updateFolder" id="13338e00-46a3-425a-97e3-6fdf6d368d64" method="POST"><con:description>Updates a folder changing its metadata. The folder object in input must specify the property id&#13;
Updates a folder</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:sampleContent><![CDATA[<WSFolder>
   <id>0</id>
   <name>string</name>
   <parentId>0</parentId>
   <description>string</description>
   <lastModified>string</lastModified>
   <type>0</type>
   <templateId>0</templateId>
   <templateLocked>0</templateLocked>
   <creation>string</creation>
   <creator>string</creator>
   <position>0</position>
   <hidden>0</hidden>
   <foldRef>0</foldRef>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <Value/>
   </attribute>
   <storage>0</storage>
   <tags>string</tags>
</WSFolder>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="b89dcd7f-b036-4a70-a904-c147e6f24b1c" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request><![CDATA[<WSFolder>\r
   <id>0</id>\r
   <name>string</name>\r
   <parentId>0</parentId>\r
   <description>string</description>\r
   <lastModified>string</lastModified>\r
   <type>0</type>\r
   <templateId>0</templateId>\r
   <templateLocked>0</templateLocked>\r
   <creation>string</creation>\r
   <creator>string</creator>\r
   <position>0</position>\r
   <hidden>0</hidden>\r
   <foldRef>0</foldRef>\r
   <attribute>\r
      <name>string</name>\r
      <stringValue>string</stringValue>\r
      <intValue>0</intValue>\r
      <doubleValue>1.100000023841858</doubleValue>\r
      <dateValue>string</dateValue>\r
      <type>0</type>\r
      <mandatory>0</mandatory>\r
      <position>0</position>\r
      <label>string</label>\r
      <editor>0</editor>\r
      <setId>0</setId>\r
      <Value/>\r
   </attribute>\r
   <storage>0</storage>\r
   <tags>string</tags>\r
</WSFolder>]]></con:request><con:parameters/></con:request><con:request name="Request 2" id="5c40a0bd-7e51-4d84-b0eb-662bf29a815a" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{\r
  "id" : 0,\r
  "name" : "string",\r
  "parentId" : 0,\r
  "description" : "string",\r
  "lastModified" : "string",\r
  "type" : 0,\r
  "templateId" : 0,\r
  "templateLocked" : 0,\r
  "creation" : "string",\r
  "creator" : "string",\r
  "position" : 0,\r
  "hidden" : 0,\r
  "foldRef" : 0,\r
  "attributes" : [ {\r
    "name" : "string",\r
    "stringValue" : "string",\r
    "intValue" : 0,\r
    "doubleValue" : 1.100000023841858,\r
    "dateValue" : "string",\r
    "type" : 0,\r
    "mandatory" : 0,\r
    "position" : 0,\r
    "label" : "string",\r
    "editor" : 0,\r
    "setId" : 0,\r
    "value" : { }\r
  } ],\r
  "storage" : 0,\r
  "tags" : [ "string" ]\r
}</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/search/find" path="/search/find" id="11d23b80-1ea3-413d-b76d-3fd17bb9f3c2"><con:settings/><con:parameters/><con:method name="find" id="098b1abe-53f0-4e55-8e2d-b4b19991ab44" method="POST"><con:description>Runs a search on the server&#13;
Search documents</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "maxHits" : 0,&#13;
  "type" : 0,&#13;
  "expression" : "string",&#13;
  "name" : "string",&#13;
  "description" : "string",&#13;
  "topOperator" : "string",&#13;
  "caseSensitive" : 0,&#13;
  "retrieveAliases" : 0,&#13;
  "filterIds" : [ 0 ],&#13;
  "folderId" : 0,&#13;
  "expressionLanguage" : "string",&#13;
  "sizeMin" : 0,&#13;
  "sizeMax" : 0,&#13;
  "format" : "string",&#13;
  "fields" : [ "string" ],&#13;
  "language" : "string",&#13;
  "dateFrom" : "string",&#13;
  "dateTo" : "string",&#13;
  "creationFrom" : "string",&#13;
  "creationTo" : "string",&#13;
  "template" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "time" : 0,&#13;
  "estimatedHitsNumber" : 0,&#13;
  "hits" : [ {&#13;
    "id" : 0,&#13;
    "fileSize" : 0,&#13;
    "status" : 0,&#13;
    "exportStatus" : 0,&#13;
    "title" : "string",&#13;
    "version" : "string",&#13;
    "fileVersion" : "string",&#13;
    "date" : "string",&#13;
    "publisher" : "string",&#13;
    "publisherId" : 0,&#13;
    "creator" : "string",&#13;
    "creatorId" : 0,&#13;
    "type" : "string",&#13;
    "lockUserId" : 0,&#13;
    "creation" : "string",&#13;
    "fileName" : "string",&#13;
    "indexed" : 0,&#13;
    "signed" : 0,&#13;
    "stamped" : 0,&#13;
    "tags" : [ "string" ],&#13;
    "folderId" : 0,&#13;
    "templateId" : 0,&#13;
    "customId" : "string",&#13;
    "immutable" : 0,&#13;
    "digest" : "string",&#13;
    "exportName" : "string",&#13;
    "exportId" : 0,&#13;
    "docRef" : 0,&#13;
    "docRefType" : "string",&#13;
    "deleteUserId" : 0,&#13;
    "attributes" : [ {&#13;
      "name" : "string",&#13;
      "stringValue" : "string",&#13;
      "intValue" : 0,&#13;
      "doubleValue" : 1.100000023841858,&#13;
      "dateValue" : "string",&#13;
      "type" : 0,&#13;
      "mandatory" : 0,&#13;
      "position" : 0,&#13;
      "label" : "string",&#13;
      "editor" : 0,&#13;
      "setId" : 0,&#13;
      "value" : { }&#13;
    } ],&#13;
    "language" : "string",&#13;
    "summary" : "string",&#13;
    "score" : 0,&#13;
    "icon" : "string",&#13;
    "path" : "string",&#13;
    "comment" : "string",&#13;
    "lastModified" : "string",&#13;
    "rating" : 0,&#13;
    "workflowStatus" : "string",&#13;
    "published" : 0,&#13;
    "startPublishing" : "string",&#13;
    "stopPublishing" : "string",&#13;
    "pages" : 0,&#13;
    "nature" : 0,&#13;
    "formId" : 0,&#13;
    "passwordProtected" : 0&#13;
  } ],&#13;
  "moreHits" : 0,&#13;
  "totalHits" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="1e5e5b1f-6953-4edf-a1aa-163ffc458039" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{\r
  "maxHits" : 0,\r
  "type" : 0,\r
  "expression" : "string",\r
  "name" : "string",\r
  "description" : "string",\r
  "topOperator" : "string",\r
  "caseSensitive" : 0,\r
  "retrieveAliases" : 0,\r
  "filterIds" : [ 0 ],\r
  "folderId" : 0,\r
  "expressionLanguage" : "string",\r
  "sizeMin" : 0,\r
  "sizeMax" : 0,\r
  "format" : "string",\r
  "fields" : [ "string" ],\r
  "language" : "string",\r
  "dateFrom" : "string",\r
  "dateTo" : "string",\r
  "creationFrom" : "string",\r
  "creationTo" : "string",\r
  "template" : 0\r
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/addDocumentTags" path="/tag/addDocumentTags" id="5e1f7f11-fc26-451a-af55-b8924bad42c7"><con:settings/><con:parameters/><con:method name="addDocumentTags" id="d58c1127-46af-4ead-b33f-4a04aaaf17f7" method="POST"><con:description>&#13;
Appends new tags to a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="f56328ae-8f87-4b1d-9adb-d2904db44cf3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/tag/addDocumentTags</con:originalUri><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="docId" value="100"/><con:entry key="tag" value="test"/></con:parameters></con:request></con:method></con:resource><con:resource name="/tag/addFolderTags" path="/tag/addFolderTags" id="c7e8be46-7c17-4467-a8f9-6700fc22a465"><con:settings/><con:parameters/><con:method name="addFolderTags" id="f74536b5-6a4b-46ff-812a-12e9c842fe38" method="POST"><con:description>&#13;
Appends new tags to a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="5007013a-01df-4ce5-a285-dd540860d377" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/findDocumentsByTag" path="/tag/findDocumentsByTag" id="1b13ea8c-4538-4e62-ac62-152639362d8e"><con:settings/><con:parameters/><con:method name="findDocumentsByTag" id="b8b4a89f-cd4c-4d5e-84fe-c5ee4a2a0068" method="GET"><con:description>&#13;
Finds authorized documents for the current user having a specified tag.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>tag</con:name><con:style>QUERY</con:style><con:description>The tag</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "title" : "string",&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "path" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="b1c8bf05-5f8c-4c1d-8a6f-a03210b3a8d1" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/findFoldersByTag" path="/tag/findFoldersByTag" id="617d3c9e-1aa0-4da7-a3e1-e401045ca60b"><con:settings/><con:parameters/><con:method name="findFoldersByTag" id="bd72bbd2-640e-4e48-ad51-4ab4855a7855" method="GET"><con:description>&#13;
Finds authorized folders for the current user having a specified tag.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>tag</con:name><con:style>QUERY</con:style><con:description>The tag</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="6faf9924-b93c-4f19-ab29-266d622983f2" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getDocumentTags" path="/tag/getDocumentTags" id="a658519f-9f56-4cae-b5fa-e8e5f37f71c7"><con:settings/><con:parameters/><con:method name="getDocumentTags" id="f34170df-bf06-47f7-a187-adb3462be469" method="GET"><con:description>&#13;
Gets all the tags of a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ "string" ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="2a84ea0c-d01c-4d5a-92bb-7632e2094ed9" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getFolderTags" path="/tag/getFolderTags" id="f973518f-8124-40a0-87eb-f3c04700d517"><con:settings/><con:parameters/><con:method name="getFolderTags" id="cfa70f0f-a87d-480d-88b6-ebda666b696e" method="GET"><con:description>&#13;
Gets all the tags of a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ "string" ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="27bc1483-15d2-4ed8-98eb-2c3155b59f96" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getTagCloud" path="/tag/getTagCloud" id="91bfa117-f969-41ce-95ed-95adea6f9a23"><con:settings/><con:parameters/><con:method name="getTagCloud" id="814bfcca-51c8-4a1e-bfd5-331cbf9a3317" method="GET"><con:description>&#13;
Retrieves all tag clouds in the repository</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "tag" : "string",&#13;
  "count" : 0,&#13;
  "scale" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="09d9d57e-3f02-4d99-9a87-be1357136968" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getTags" path="/tag/getTags" id="df262cfb-3d1d-44ff-8233-d82e1baef67a"><con:settings/><con:parameters/><con:method name="getTags" id="8a8ed2d7-164d-467f-bf09-2d9d5c18a6d5" method="GET"><con:description>&#13;
Gets all the tags used in the sysem</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ "string" ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="052360bb-c29a-437a-804c-ce32679282bd" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/setDocumentTags" path="/tag/setDocumentTags" id="7c382628-d5e3-4ee1-b67d-f536923726d4"><con:settings/><con:parameters/><con:method name="setDocumentTags" id="639ea23f-653e-46fb-88ff-ce9aac4cb2b7" method="POST"><con:description>&#13;
Set the tags of a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="752f171c-15a7-4d7e-b2ab-9fbfed6f5e0d" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/setFolderTags" path="/tag/setFolderTags" id="dca9e3eb-1882-4f1a-9255-b72ae90c41e2"><con:settings/><con:parameters/><con:method name="setFolderTags" id="f056c442-4181-4088-81ff-26b4b8cc3d62" method="POST"><con:description>&#13;
Sets the tags of a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="4363b18b-f50f-4f6f-b8c2-4c0bf542ef2c" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="95032dbd-6f79-4199-82c9-d390e050ac0a" name="LogicalDOC REST API 1" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="https://docs.logicaldoc.com/resources/wsdoc/rest/8.3.4/swagger.json" basePath="/services/rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description><![CDATA[This is the interactive documentation of the REST APIs exposed by LogicalDOC. You can find more information about LogicalDOC at https://www.logicaldoc.com or on Twitter @logicaldoc.<br/>                Note: The access path to the API is protected with basic authentication, to be able to run the samples you must log in using the credentials of a Logicaldoc user, or passing to the request the session ID (SID) as a cookie (cookie name: `ldoc-sid`).<br/><br/>             Here is an example to list the children folders: <br/>             <pre>curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4</pre>             <br/><br/>             RESTful Guide with curl: https://wiki.logicaldoc.com/wiki/RESTful_Guide_with_curl             <br/><br/>             Practical examples of use are available for various programming languages at: http://wiki.logicaldoc.com/wiki/Bindings_And_Samples             <br/><br/>             SDK Clients for a number of programming languages(Java, Javascript, Python, PHP, C# and more) can be downloaded at: https://app.swaggerhub.com/apis/swatzniak/logicaldoc_rest_api               <br/><br/>             **Find out more about LogicalDOC** https://www.logicaldoc.com]]></con:description><con:settings/><con:definitionCache type="TEXT" rootPart="https://docs.logicaldoc.com/resources/wsdoc/rest/8.3.4/swagger.json"><con:part><con:url>https://docs.logicaldoc.com/resources/wsdoc/rest/8.3.4/swagger.json</con:url><con:content><![CDATA[{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the interactive documentation of the REST APIs exposed by LogicalDOC. You can find more information about LogicalDOC at https://www.logicaldoc.com or on Twitter @logicaldoc.<br/>                Note: The access path to the API is protected with basic authentication, to be able to run the samples you must log in using the credentials of a Logicaldoc user, or passing to the request the session ID (SID) as a cookie (cookie name: `ldoc-sid`).<br/><br/>             Here is an example to list the children folders: <br/>             <pre>curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4</pre>             <br/><br/>             RESTful Guide with curl: https://wiki.logicaldoc.com/wiki/RESTful_Guide_with_curl             <br/><br/>             Practical examples of use are available for various programming languages at: http://wiki.logicaldoc.com/wiki/Bindings_And_Samples             <br/><br/>             SDK Clients for a number of programming languages(Java, Javascript, Python, PHP, C# and more) can be downloaded at: https://app.swaggerhub.com/apis/swatzniak/logicaldoc_rest_api               <br/><br/>             **Find out more about LogicalDOC** https://www.logicaldoc.com",
    "version" : "8.3.4",
    "title" : "LogicalDOC REST API",
    "contact" : {
      "name" : "LogicalDOC Support Team email: devel@logicaldoc.com"
    },
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath" : "/services/rest",
  "host" : "localhost:8080",
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "bookmark"
  }, {
    "name" : "search"
  }, {
    "name" : "folder"
  }, {
    "name" : "tag"
  }, {
    "name" : "document"
  } ],
  "paths" : {
    "/bookmark/bookmarkDocument" : {
      "get" : {
        "tags" : [ "bookmark" ],
        "operationId" : "bookmarkDocument",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSBookmark"
            },
            "headers" : { }
          }
        }
      }
    },
    "/bookmark/bookmarkFolder" : {
      "get" : {
        "tags" : [ "bookmark" ],
        "operationId" : "bookmarkFolder",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSBookmark"
            },
            "headers" : { }
          }
        }
      }
    },
    "/bookmark/deleteBookmark" : {
      "delete" : {
        "tags" : [ "bookmark" ],
        "operationId" : "deleteBookmark",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bookmarkId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/bookmark/getBookmarks" : {
      "get" : {
        "tags" : [ "bookmark" ],
        "operationId" : "getBookmarks",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSBookmark"
              }
            },
            "headers" : { }
          }
        }
      }
    },
    "/bookmark/saveBookmark" : {
      "post" : {
        "tags" : [ "bookmark" ],
        "operationId" : "saveBookmark",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WSBookmark"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSBookmark"
            },
            "headers" : { }
          }
        }
      }
    },
    "/bookmark/unbookmarkDocument" : {
      "delete" : {
        "tags" : [ "bookmark" ],
        "operationId" : "unbookmarkDocument",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/bookmark/unbookmarkFolder" : {
      "delete" : {
        "tags" : [ "bookmark" ],
        "operationId" : "unbookmarkFolder",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/addNote" : {
      "post" : {
        "tags" : [ "document" ],
        "summary" : "Adds a new note for the given document",
        "description" : "",
        "operationId" : "addNote",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "formData",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "note",
          "in" : "formData",
          "description" : "Text of the note to add",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSNote"
            }
          }
        }
      }
    },
    "/document/checkin" : {
      "post" : {
        "tags" : [ "document" ],
        "summary" : "Check-in an existing document",
        "description" : "Performs a check-in (commit) operation of new content over an existing document. The document must be in checked-out status",
        "operationId" : "checkin",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "formData",
          "description" : "The ID of an existing document to update",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "comment",
          "in" : "formData",
          "description" : "An optional comment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "release",
          "in" : "formData",
          "description" : "Indicates whether to create or not a new major release of the updated document",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "filename",
          "in" : "formData",
          "description" : "File name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filedata",
          "in" : "formData",
          "description" : "File data",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "401" : {
            "description" : "Authentication failed"
          },
          "500" : {
            "description" : "Generic error, see the response message"
          }
        }
      }
    },
    "/document/checkout" : {
      "post" : {
        "tags" : [ "document" ],
        "summary" : "Checkout a document",
        "description" : "Performs the checkout operation on a document. The document status will be changed to checked-out",
        "operationId" : "checkout",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "formData",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/create" : {
      "post" : {
        "tags" : [ "document" ],
        "summary" : "Creates a new document",
        "description" : "Creates a new document using the metadata document object provided as JSON/XML",
        "operationId" : "createDocument",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "document",
          "in" : "formData",
          "description" : "The document metadata provided as WSDocument object encoded in JSON/XML format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "content",
          "in" : "formData",
          "description" : "File data",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSDocument"
            }
          },
          "401" : {
            "description" : "Authentication failed"
          },
          "500" : {
            "description" : "Generic error, see the response message"
          }
        }
      }
    },
    "/document/createPdf" : {
      "put" : {
        "tags" : [ "document" ],
        "operationId" : "createPdf",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fileVersion",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/createThumbnail" : {
      "put" : {
        "tags" : [ "document" ],
        "operationId" : "createThumbnail",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fileVersion",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/delete" : {
      "delete" : {
        "tags" : [ "document" ],
        "summary" : "Deletes a document",
        "description" : "",
        "operationId" : "delete",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "description" : "Document ID to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/deleteNote" : {
      "delete" : {
        "tags" : [ "document" ],
        "summary" : "Deletes a note",
        "description" : "",
        "operationId" : "deleteNote",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "noteId",
          "in" : "query",
          "description" : "ID of the note to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/deleteVersion" : {
      "delete" : {
        "tags" : [ "document" ],
        "summary" : "Delete the version of a document",
        "description" : "Deletes the version of a document using the document ID and version. You can not delete the latest version of a document. Returns the latest version of the document",
        "operationId" : "deleteVersion",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "version",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/document/getContent" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Gets the document content",
        "description" : "Returns the content of a document using the document ID in input",
        "operationId" : "getContent",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DataHandler"
            }
          }
        }
      }
    },
    "/document/getDocument" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Gets document metadata",
        "description" : "Gets the document metadata",
        "operationId" : "getDocument",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSDocument"
            }
          }
        }
      }
    },
    "/document/getNotes" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Gets all the notes of a document",
        "description" : "",
        "operationId" : "getNotes",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSNote"
              }
            }
          }
        }
      }
    },
    "/document/getRatings" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Retrieves the different ratings of a focuments",
        "description" : "",
        "operationId" : "getRatings",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSRating"
              }
            }
          }
        }
      }
    },
    "/document/getVersionContent" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Gets the document content by version",
        "description" : "Returns the content of a document using the document ID and version",
        "operationId" : "getVersionContent",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "version",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DataHandler"
            }
          }
        }
      }
    },
    "/document/list" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Lists documents by folder",
        "description" : "Lists Documents by folder identifier",
        "operationId" : "list",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSDocument"
              }
            }
          }
        }
      }
    },
    "/document/listDocuments" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Lists documents by folder and filename",
        "description" : "Lists Documents by folder ID filtering the results by filename",
        "operationId" : "listDocuments",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fileName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSDocument"
              }
            }
          }
        }
      }
    },
    "/document/move" : {
      "put" : {
        "tags" : [ "document" ],
        "summary" : "Moves an existing document with the given identifier",
        "description" : "",
        "operationId" : "move",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "folderId",
          "in" : "query",
          "description" : "Target Folder ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/promoteVersion" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Promotes an old version to the current default one",
        "description" : "",
        "operationId" : "promoteVersion",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "version",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/rateDocument" : {
      "get" : {
        "tags" : [ "document" ],
        "summary" : "Add/Update the user's vote for a document",
        "description" : "",
        "operationId" : "rateDocument",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "vote",
          "in" : "query",
          "description" : "The user's vote",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSRating"
            }
          }
        }
      }
    },
    "/document/replaceFile" : {
      "post" : {
        "tags" : [ "document" ],
        "summary" : "Replace the file of a version",
        "description" : "Replaces the file associated to a given version.",
        "operationId" : "replaceFile",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "formData",
          "description" : "The ID of an existing document to update",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "fileVersion",
          "in" : "formData",
          "description" : "The file version",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "comment",
          "in" : "formData",
          "description" : "Comment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filedata",
          "in" : "formData",
          "description" : "File data",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "401" : {
            "description" : "Authentication failed"
          },
          "500" : {
            "description" : "Generic error, see the response message"
          }
        }
      }
    },
    "/document/update" : {
      "put" : {
        "tags" : [ "document" ],
        "summary" : "Updates an existing document",
        "description" : "Updates the metadata of an existing document. The elements required to operate are the document ID: id and the folder ID: folderId",
        "operationId" : "update",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Document object that needs to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WSDocument"
          },
          "x-examples" : {
            "default" : "{ \"id\": 1111111, \"folderId\": 3435433 }"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/document/upload" : {
      "post" : {
        "tags" : [ "document" ],
        "summary" : "Uploads a document",
        "description" : "Creates or updates an existing document, if used in update mode docId must be provided, when used in create mode folderId is required. Returns the ID of the created/updated document. &lt;br/&gt;Example: curl -u admin:admin -H ''Accept: application/json'' -X POST -F folderId=4 -F filename=newDoc.txt -F filedata=@newDoc.txt http://localhost:8080/services/rest/document/upload",
        "operationId" : "upload",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "formData",
          "description" : "The ID of an existing document to update",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "folderId",
          "in" : "formData",
          "description" : "Folder ID where to place the document",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "release",
          "in" : "formData",
          "description" : "Indicates whether to create or not a new major release of an updated document",
          "required" : false,
          "type" : "string",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "filename",
          "in" : "formData",
          "description" : "File name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "language",
          "in" : "formData",
          "description" : "Language of the document (ISO 639-2)",
          "required" : false,
          "type" : "string",
          "default" : "en"
        }, {
          "name" : "filedata",
          "in" : "formData",
          "description" : "File data",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "401" : {
            "description" : "Authentication failed"
          },
          "500" : {
            "description" : "Generic error, see the response message"
          }
        }
      }
    },
    "/folder/create" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Creates a new folder",
        "description" : "The 'folder' metadata comes in the POST request body (encoded as JSON). Note: folder object must specify at least fields name and parentId",
        "operationId" : "createFolderByModel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The folder metadata",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WSFolder"
          },
          "x-examples" : {
            "default" : "{ \"parentId\": 4, \"name\": \"Folder created by REST ws\"}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/createFolder" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Creates a subfolder",
        "description" : "",
        "operationId" : "createFolder",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "parentId",
          "in" : "formData",
          "description" : "The ID of the parent folder",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "Name of the new folder",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      }
    },
    "/folder/createPath" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Creates a path",
        "description" : "Creates a path of folders starting from a parent folder. It returns the metadata object representing the latest created folder in the path",
        "operationId" : "createPath",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parentId",
          "in" : "formData",
          "description" : "The parent folder ID from which the new path will start",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "path",
          "in" : "formData",
          "description" : "The path to create",
          "required" : false,
          "type" : "string",
          "x-example" : "How/to/POST/JSON/data/with/Curl"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/createSimple" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Creates folders from path",
        "description" : "Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path. Example: curl -u admin:admin -X POST -H ''Content-Type: text/plain'' -H ''Accept: application/json'' -d ''/Default/Curl/newfolder'' http://localhost:8080/services/rest/folder/createSimple",
        "operationId" : "createSimple",
        "consumes" : [ "text/plain", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The string representing the path to be created",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "x-examples" : {
            "default" : "/Default/newfolder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/createSimpleForm" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Creates folders from path",
        "description" : "Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path",
        "operationId" : "createSimpleForm",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderPath",
          "in" : "formData",
          "description" : "The string representing the path to be created",
          "required" : false,
          "type" : "string",
          "x-example" : "/Default/newfolder"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/createSimpleJSON" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Creates folders from path",
        "description" : "Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path",
        "operationId" : "createSimpleJSON",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "folderPath",
          "description" : "The string representing the path to be created",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "x-examples" : {
            "default" : "{\"folderPath\":\"/Default/central/repo\"}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/delete" : {
      "delete" : {
        "tags" : [ "folder" ],
        "summary" : "Deletes a folder",
        "description" : "",
        "operationId" : "deleteFolder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "description" : "The ID of the folder to be deleted",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/folder/findByPath" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Gets a folder",
        "description" : "Finds the folder at the specified path",
        "operationId" : "findByPath",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "path",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/getFolder" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Gets a folder",
        "description" : "Gets the folder with the specified ID",
        "operationId" : "getFolder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "description" : "The folder ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/getPath" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Gets a path of folders",
        "description" : "Returns the folders that make up the path to the folder in input.",
        "operationId" : "getPath",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "description" : "Folder identifier (ID)",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSFolder"
              }
            }
          }
        }
      }
    },
    "/folder/getPathString" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Gets a path",
        "description" : "Returns the path to the folder in input.",
        "operationId" : "getPathString",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "description" : "Folder identifier (ID)",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/folder/getRootFolder" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Gets the root folderr",
        "description" : "Gets the root folder in the current tenant",
        "operationId" : "getRootFolder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSFolder"
            }
          }
        }
      }
    },
    "/folder/listChildren" : {
      "get" : {
        "tags" : [ "folder" ],
        "summary" : "Lists the child folders",
        "description" : "Returns the list of child folders. Example: curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4",
        "operationId" : "listChildren",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "description" : "The ID of the parent folder",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSFolder"
              }
            }
          }
        }
      }
    },
    "/folder/move" : {
      "put" : {
        "tags" : [ "folder" ],
        "summary" : "Moves a folder",
        "description" : "Updates a folder by changing its parent. The folder is moved to the new parent folder.",
        "operationId" : "moveFolder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "parentId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/folder/rename" : {
      "put" : {
        "tags" : [ "folder" ],
        "summary" : "Renames a folder",
        "description" : "Changes the name of a given folder",
        "operationId" : "rename",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/folder/update" : {
      "post" : {
        "tags" : [ "folder" ],
        "summary" : "Updates a folder",
        "description" : "Updates a folder changing its metadata. The folder object in input must specify the property id",
        "operationId" : "updateFolder",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "A value object with the metadata of the folder to update",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WSFolder"
          },
          "x-examples" : {
            "default" : "{ \"id\": 2335253, \"name\": \"Folder updated by REST ws\"}"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/search/find" : {
      "post" : {
        "tags" : [ "search" ],
        "summary" : "Search documents",
        "description" : "Runs a search on the server",
        "operationId" : "find",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Search options",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WSSearchOptions"
          },
          "x-examples" : {
            "default" : "{\"maxHits\":50,\"expression\":\"document management system\",\"expressionLanguage\":\"en\",\"language\":\"en\"}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WSSearchResult"
            }
          }
        }
      }
    },
    "/tag/addDocumentTags" : {
      "post" : {
        "tags" : [ "tag" ],
        "summary" : "Appends new tags to a document",
        "description" : "",
        "operationId" : "addDocumentTags",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "formData",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tag",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tag/addFolderTags" : {
      "post" : {
        "tags" : [ "tag" ],
        "summary" : "Appends new tags to a folder",
        "description" : "",
        "operationId" : "addFolderTags",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "formData",
          "description" : "Folder ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tag",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tag/findDocumentsByTag" : {
      "get" : {
        "tags" : [ "tag" ],
        "summary" : "Finds authorized documents for the current user having a specified tag.",
        "description" : "",
        "operationId" : "findDocumentsByTag",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tag",
          "in" : "query",
          "description" : "The tag",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSDocument"
              }
            }
          }
        }
      }
    },
    "/tag/findFoldersByTag" : {
      "get" : {
        "tags" : [ "tag" ],
        "summary" : "Finds authorized folders for the current user having a specified tag.",
        "description" : "",
        "operationId" : "findFoldersByTag",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "tag",
          "in" : "query",
          "description" : "The tag",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSFolder"
              }
            }
          }
        }
      }
    },
    "/tag/getDocumentTags" : {
      "get" : {
        "tags" : [ "tag" ],
        "summary" : "Gets all the tags of a document",
        "description" : "",
        "operationId" : "getDocumentTags",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "query",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/tag/getFolderTags" : {
      "get" : {
        "tags" : [ "tag" ],
        "summary" : "Gets all the tags of a folder",
        "description" : "",
        "operationId" : "getFolderTags",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "query",
          "description" : "Folder ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/tag/getTagCloud" : {
      "get" : {
        "tags" : [ "tag" ],
        "summary" : "Retrieves all tag clouds in the repository",
        "description" : "",
        "operationId" : "getTagCloud",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WSTagCloud"
              }
            }
          }
        }
      }
    },
    "/tag/getTags" : {
      "get" : {
        "tags" : [ "tag" ],
        "summary" : "Gets all the tags used in the sysem",
        "description" : "",
        "operationId" : "getTags",
        "consumes" : [ "application/xml", "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/tag/setDocumentTags" : {
      "post" : {
        "tags" : [ "tag" ],
        "summary" : "Set the tags of a document",
        "description" : "",
        "operationId" : "setDocumentTags",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "docId",
          "in" : "formData",
          "description" : "Document ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tag",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tag/setFolderTags" : {
      "post" : {
        "tags" : [ "tag" ],
        "summary" : "Sets the tags of a folder",
        "description" : "",
        "operationId" : "setFolderTags",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "folderId",
          "in" : "formData",
          "description" : "Folder ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "tag",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "definitions" : {
    "WSAttribute" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "stringValue" : {
          "type" : "string"
        },
        "intValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "doubleValue" : {
          "type" : "number",
          "format" : "double"
        },
        "dateValue" : {
          "type" : "string"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mandatory" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hidden" : {
          "type" : "integer",
          "format" : "int32"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "label" : {
          "type" : "string"
        },
        "editor" : {
          "type" : "integer",
          "format" : "int32"
        },
        "setId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "multiple" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parent" : {
          "type" : "string"
        },
        "stringValues" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        }
      },
      "xml" : {
        "name" : "attribute"
      }
    },
    "WSNote" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "docId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fileVersion" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "fileName" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "message" : {
          "type" : "string"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "opacity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "color" : {
          "type" : "string"
        },
        "left" : {
          "type" : "number",
          "format" : "double"
        },
        "top" : {
          "type" : "number",
          "format" : "double"
        },
        "width" : {
          "type" : "number",
          "format" : "double"
        },
        "height" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "WSFolder" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "parentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "lastModified" : {
          "type" : "string"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "templateId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "templateLocked" : {
          "type" : "integer",
          "format" : "int32"
        },
        "creation" : {
          "type" : "string"
        },
        "creator" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hidden" : {
          "type" : "integer",
          "format" : "int32"
        },
        "foldRef" : {
          "type" : "integer",
          "format" : "int64"
        },
        "securityRef" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WSAttribute"
          }
        },
        "storage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "folder"
      }
    },
    "OutputStream" : {
      "type" : "object"
    },
    "WSDocument" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fileSize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "exportStatus" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        },
        "fileVersion" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string"
        },
        "publisher" : {
          "type" : "string"
        },
        "publisherId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "creator" : {
          "type" : "string"
        },
        "creatorId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "lockUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "creation" : {
          "type" : "string"
        },
        "fileName" : {
          "type" : "string"
        },
        "indexed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "signed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "stamped" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "folderId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "templateId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "customId" : {
          "type" : "string"
        },
        "immutable" : {
          "type" : "integer",
          "format" : "int32"
        },
        "digest" : {
          "type" : "string"
        },
        "exportName" : {
          "type" : "string"
        },
        "exportId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "docRef" : {
          "type" : "integer",
          "format" : "int64"
        },
        "docRefType" : {
          "type" : "string"
        },
        "deleteUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WSAttribute"
          }
        },
        "language" : {
          "type" : "string"
        },
        "summary" : {
          "type" : "string"
        },
        "score" : {
          "type" : "integer",
          "format" : "int32"
        },
        "icon" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "lastModified" : {
          "type" : "string"
        },
        "rating" : {
          "type" : "integer",
          "format" : "int32"
        },
        "workflowStatus" : {
          "type" : "string"
        },
        "workflowStatusDisplay" : {
          "type" : "string"
        },
        "published" : {
          "type" : "integer",
          "format" : "int32"
        },
        "startPublishing" : {
          "type" : "string"
        },
        "stopPublishing" : {
          "type" : "string"
        },
        "pages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nature" : {
          "type" : "integer",
          "format" : "int32"
        },
        "formId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "passwordProtected" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "document"
      }
    },
    "WSSearchResult" : {
      "type" : "object",
      "properties" : {
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "estimatedHitsNumber" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WSDocument"
          }
        },
        "moreHits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalHits" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DataHandler" : {
      "type" : "object",
      "properties" : {
        "dataSource" : {
          "$ref" : "#/definitions/DataSource"
        },
        "name" : {
          "type" : "string"
        },
        "content" : {
          "type" : "object"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "allCommands" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommandInfo"
          }
        },
        "contentType" : {
          "type" : "string"
        },
        "outputStream" : {
          "$ref" : "#/definitions/OutputStream"
        },
        "preferredCommands" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommandInfo"
          }
        },
        "transferDataFlavors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataFlavor"
          }
        }
      }
    },
    "WSSearchOptions" : {
      "type" : "object",
      "properties" : {
        "maxHits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "expression" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "topOperator" : {
          "type" : "string"
        },
        "caseSensitive" : {
          "type" : "integer",
          "format" : "int32"
        },
        "retrieveAliases" : {
          "type" : "integer",
          "format" : "int32"
        },
        "filterIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "folderId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "searchInSubPath" : {
          "type" : "integer",
          "format" : "int32"
        },
        "expressionLanguage" : {
          "type" : "string"
        },
        "sizeMin" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sizeMax" : {
          "type" : "integer",
          "format" : "int64"
        },
        "format" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "language" : {
          "type" : "string"
        },
        "dateFrom" : {
          "type" : "string"
        },
        "dateTo" : {
          "type" : "string"
        },
        "creationFrom" : {
          "type" : "string"
        },
        "creationTo" : {
          "type" : "string"
        },
        "template" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "xml" : {
        "name" : "searchoptions"
      }
    },
    "DataFlavor" : {
      "type" : "object",
      "properties" : {
        "mimeType" : {
          "type" : "string"
        },
        "humanPresentableName" : {
          "type" : "string"
        },
        "primaryType" : {
          "type" : "string"
        },
        "mimeTypeSerializedObject" : {
          "type" : "boolean",
          "default" : false
        },
        "defaultRepresentationClassAsString" : {
          "type" : "string"
        },
        "representationClassInputStream" : {
          "type" : "boolean",
          "default" : false
        },
        "representationClassReader" : {
          "type" : "boolean",
          "default" : false
        },
        "representationClassCharBuffer" : {
          "type" : "boolean",
          "default" : false
        },
        "representationClassByteBuffer" : {
          "type" : "boolean",
          "default" : false
        },
        "representationClassSerializable" : {
          "type" : "boolean",
          "default" : false
        },
        "representationClassRemote" : {
          "type" : "boolean",
          "default" : false
        },
        "flavorSerializedObjectType" : {
          "type" : "boolean",
          "default" : false
        },
        "flavorRemoteObjectType" : {
          "type" : "boolean",
          "default" : false
        },
        "flavorJavaFileListType" : {
          "type" : "boolean",
          "default" : false
        },
        "flavorTextType" : {
          "type" : "boolean",
          "default" : false
        },
        "subType" : {
          "type" : "string"
        }
      }
    },
    "DataSource" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        },
        "contentType" : {
          "type" : "string"
        },
        "outputStream" : {
          "$ref" : "#/definitions/OutputStream"
        }
      }
    },
    "CommandInfo" : {
      "type" : "object",
      "properties" : {
        "commandName" : {
          "type" : "string"
        },
        "commandClass" : {
          "type" : "string"
        }
      }
    },
    "WSBookmark" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "targetId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "position" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fileType" : {
          "type" : "string"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "WSTagCloud" : {
      "type" : "object",
      "properties" : {
        "tag" : {
          "type" : "string"
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scale" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "WSRating" : {
      "type" : "object",
      "properties" : {
        "docId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "vote" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}]]></con:content><con:type>https://swagger.io/swagger2/specification</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:8080</con:endpoint></con:endpoints><con:resource name="/bookmark/bookmarkDocument" path="/bookmark/bookmarkDocument" id="26f0652b-d04f-455c-8857-31ac9330cf28"><con:settings/><con:parameters/><con:method name="bookmarkDocument" id="94458798-8574-45d4-8d05-d5875e24b6ef" method="GET"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="bd3aaa07-0774-4221-9bb0-42c4957d8c34" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/bookmarkFolder" path="/bookmark/bookmarkFolder" id="47cf8bde-fedf-450c-9c71-50ba28349e0a"><con:settings/><con:parameters/><con:method name="bookmarkFolder" id="e4f936a8-3d92-4078-88ce-904bfdc5ea50" method="GET"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="60905350-a53a-44b5-9f51-0dda397e01a7" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/deleteBookmark" path="/bookmark/deleteBookmark" id="ffd51d17-869a-4c4e-9104-0ee83c97165c"><con:settings/><con:parameters/><con:method name="deleteBookmark" id="cceb3479-e6b9-45ae-aa50-a4b0795105ac" method="DELETE"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>bookmarkId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="bfde19b8-86b2-461c-8607-3d9284584d2a" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/getBookmarks" path="/bookmark/getBookmarks" id="d46cd359-96fb-4529-bd57-cf339a5a6d22"><con:settings/><con:parameters/><con:method name="getBookmarks" id="0018132f-1276-4aa0-8d8b-62cfd2112b6a" method="GET"><con:description>&#13;
</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="63130b2e-d327-489b-8533-4df9a052cb5f" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/saveBookmark" path="/bookmark/saveBookmark" id="993b4717-2b10-425e-ae83-8be306d69f5f"><con:settings/><con:parameters/><con:method name="saveBookmark" id="3bb3d1d4-bd9f-42db-a426-fec6b69242f3" method="POST"><con:description>&#13;
</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:sampleContent><![CDATA[<WSBookmark>
   <id>0</id>
   <userId>0</userId>
   <targetId>0</targetId>
   <title>string</title>
   <description>string</description>
   <position>0</position>
   <fileType>string</fileType>
   <type>0</type>
</WSBookmark>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "userId" : 0,&#13;
  "targetId" : 0,&#13;
  "title" : "string",&#13;
  "description" : "string",&#13;
  "position" : 0,&#13;
  "fileType" : "string",&#13;
  "type" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="0723703a-4b31-4304-b81d-10a0409e9568" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request><![CDATA[<WSBookmark>\r
   <id>0</id>\r
   <userId>0</userId>\r
   <targetId>0</targetId>\r
   <title>string</title>\r
   <description>string</description>\r
   <position>0</position>\r
   <fileType>string</fileType>\r
   <type>0</type>\r
</WSBookmark>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request><con:request name="Request 2" id="f1d1b40a-8f8a-4f03-973b-595d739578ff" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request>{\r
  "id" : 0,\r
  "userId" : 0,\r
  "targetId" : 0,\r
  "title" : "string",\r
  "description" : "string",\r
  "position" : 0,\r
  "fileType" : "string",\r
  "type" : 0\r
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/unbookmarkDocument" path="/bookmark/unbookmarkDocument" id="2763ee5d-41fd-4f11-b162-d9be8d77223c"><con:settings/><con:parameters/><con:method name="unbookmarkDocument" id="2b5cb75f-6409-42d7-b349-ede17d1abd07" method="DELETE"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="631984d3-153e-4189-ab93-b61331ccbe8c" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/bookmark/unbookmarkFolder" path="/bookmark/unbookmarkFolder" id="1e435a5b-87a4-4bd6-9d01-fe3b78018259"><con:settings/><con:parameters/><con:method name="unbookmarkFolder" id="e3abbb2f-ee7c-4006-a299-289d42ac3b5d" method="DELETE"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="bc96c4d3-3cd6-41a3-967f-c1d8aa3413e8" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/addNote" path="/document/addNote" id="4f25f3da-f70c-4997-acfb-6378b5dddd76"><con:settings/><con:parameters/><con:method name="addNote" id="ad693b93-d71a-4c57-bf19-dccb5e7b1fae" method="POST"><con:description>&#13;
Adds a new note for the given document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter required="true"><con:name>note</con:name><con:style>QUERY</con:style><con:description>Text of the note to add</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "docId" : 0,&#13;
  "fileVersion" : "string",&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "fileName" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "message" : "string",&#13;
  "page" : 0,&#13;
  "opacity" : 0,&#13;
  "color" : "string",&#13;
  "left" : 1.100000023841858,&#13;
  "top" : 1.100000023841858,&#13;
  "width" : 1.100000023841858,&#13;
  "height" : 1.100000023841858&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c1253376-a8ac-4843-abf2-d4e7ddab1ceb" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/checkin" path="/document/checkin" id="a27a8282-6e46-4624-bb66-a618121fae58"><con:settings/><con:parameters/><con:method name="checkin" id="1145e985-149f-42f1-a2b1-4ceeeb95734d" method="POST"><con:description>Performs a check-in (commit) operation of new content over an existing document. The document must be in checked-out status&#13;
Check-in an existing document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of an existing document to update</con:description></con:parameter><con:parameter><con:name>comment</con:name><con:style>QUERY</con:style><con:description>An optional comment</con:description></con:parameter><con:parameter><con:name>release</con:name><con:style>QUERY</con:style><con:description>Indicates whether to create or not a new major release of the updated document</con:description></con:parameter><con:parameter required="true"><con:name>filename</con:name><con:style>QUERY</con:style><con:description>File name</con:description></con:parameter><con:parameter required="true"><con:name>filedata</con:name><con:style>QUERY</con:style><con:description>File data</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="38a7512f-86cb-4959-9dcc-8a74b1523094" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/checkout" path="/document/checkout" id="e7f0daf1-1218-42c9-ab60-be9729fc5643"><con:settings/><con:parameters/><con:method name="checkout" id="9a64b6c8-efa6-45ef-91a4-5041f8042f62" method="POST"><con:description>Performs the checkout operation on a document. The document status will be changed to checked-out&#13;
Checkout a document</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="525820d3-d852-430d-9c4e-9ef1f2fd1f80" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/create" path="/document/create" id="5c077f3c-342d-4cc4-b9e5-835072767c03"><con:settings/><con:parameters/><con:method name="createDocument" id="8c6abd7d-4dae-4385-a1ff-dae435c80983" method="POST"><con:description>Creates a new document using the metadata document object provided as JSON/XML&#13;
Creates a new document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>document</con:name><con:style>QUERY</con:style><con:description>The document metadata provided as WSDocument object encoded in JSON/XML format</con:description></con:parameter><con:parameter required="true"><con:name>content</con:name><con:style>QUERY</con:style><con:description>File data</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "workflowStatusDisplay" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="fc526477-a09a-4bcc-9ab5-e7cebf42a572" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/createPdf" path="/document/createPdf" id="d99aca0b-1709-497a-a570-0fd0759ccd6f"><con:settings/><con:parameters/><con:method name="createPdf" id="10f43d7c-a117-4fa9-b3dc-c7c5f0d541fe" method="PUT"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>fileVersion</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="2666461d-ea2b-4fec-9dd9-3599dd8a149e" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/createThumbnail" path="/document/createThumbnail" id="3edab38c-4bd1-4be5-952f-0780442d6ce2"><con:settings/><con:parameters/><con:method name="createThumbnail" id="cde507e7-e633-43fa-ad2b-7e5a876a4f8c" method="PUT"><con:description>&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>fileVersion</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="8ec486ee-9f20-42a5-bb93-3815179f2bac" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/delete" path="/document/delete" id="9485f250-82f5-4a8c-bd7e-75aea63f4257"><con:settings/><con:parameters/><con:method name="delete" id="6d194e50-deb7-4080-ba80-28ce923bd26f" method="DELETE"><con:description>&#13;
Deletes a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID to delete</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="dfc2f9c6-d9fc-4886-a515-2b2cdaf91d9e" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/deleteNote" path="/document/deleteNote" id="39ebf912-a975-4e6e-a9bf-95f0d8301d38"><con:settings/><con:parameters/><con:method name="deleteNote" id="3231a97a-810e-4ecb-9ea1-9b779321e2fe" method="DELETE"><con:description>&#13;
Deletes a note</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>noteId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>ID of the note to delete</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="75992dba-e2da-4357-b601-06f90b539e4b" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/deleteVersion" path="/document/deleteVersion" id="c9978af5-4a4f-42a3-a40f-5468f2ebc42d"><con:settings/><con:parameters/><con:method name="deleteVersion" id="dbae6ae2-dd8b-4e2e-82d3-4a7b4bf9d103" method="DELETE"><con:description>Deletes the version of a document using the document ID and version. You can not delete the latest version of a document. Returns the latest version of the document&#13;
Delete the version of a document</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>"string"</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="732c33ec-8f30-4d70-845f-4f5a9c19cf4e" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getContent" path="/document/getContent" id="7b9fe44a-8466-4be3-9701-747ec326d5db"><con:settings/><con:parameters/><con:method name="getContent" id="cd411e92-74e4-464e-9495-59db232f5cfa" method="GET"><con:description>Returns the content of a document using the document ID in input&#13;
Gets the document content</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/octet-stream</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="7907770a-71a0-48bf-aa86-5242e312211f" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getDocument" path="/document/getDocument" id="d08b0be6-5d85-40a0-84d3-d9ec8bd8b7c4"><con:settings/><con:parameters/><con:method name="getDocument" id="548e0e91-46c8-4cf0-8f85-b1a885a08204" method="GET"><con:description>Gets the document metadata&#13;
Gets document metadata</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "workflowStatusDisplay" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent><![CDATA[<document>
   <id>0</id>
   <fileSize>0</fileSize>
   <status>0</status>
   <exportStatus>0</exportStatus>
   <version>string</version>
   <fileVersion>string</fileVersion>
   <date>string</date>
   <publisher>string</publisher>
   <publisherId>0</publisherId>
   <creator>string</creator>
   <creatorId>0</creatorId>
   <type>string</type>
   <lockUserId>0</lockUserId>
   <creation>string</creation>
   <fileName>string</fileName>
   <indexed>0</indexed>
   <signed>0</signed>
   <stamped>0</stamped>
   <tags>string</tags>
   <folderId>0</folderId>
   <templateId>0</templateId>
   <customId>string</customId>
   <immutable>0</immutable>
   <digest>string</digest>
   <exportName>string</exportName>
   <exportId>0</exportId>
   <docRef>0</docRef>
   <docRefType>string</docRefType>
   <deleteUserId>0</deleteUserId>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <hidden>0</hidden>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <multiple>0</multiple>
      <parent>string</parent>
      <stringValues>string</stringValues>
      <Value/>
   </attribute>
   <language>string</language>
   <summary>string</summary>
   <score>0</score>
   <icon>string</icon>
   <comment>string</comment>
   <lastModified>string</lastModified>
   <rating>0</rating>
   <workflowStatus>string</workflowStatus>
   <workflowStatusDisplay>string</workflowStatusDisplay>
   <published>0</published>
   <startPublishing>string</startPublishing>
   <stopPublishing>string</stopPublishing>
   <pages>0</pages>
   <nature>0</nature>
   <formId>0</formId>
   <passwordProtected>0</passwordProtected>
</document>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="cbc66ee5-01f4-4857-86e0-29fce3a9f914" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getNotes" path="/document/getNotes" id="1dcff0f0-1bc3-4212-9567-eca366fbdb4a"><con:settings/><con:parameters/><con:method name="getNotes" id="171bf207-7816-4eef-bda6-7b15abc4c4c9" method="GET"><con:description>&#13;
Gets all the notes of a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "docId" : 0,&#13;
  "fileVersion" : "string",&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "fileName" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "message" : "string",&#13;
  "page" : 0,&#13;
  "opacity" : 0,&#13;
  "color" : "string",&#13;
  "left" : 1.100000023841858,&#13;
  "top" : 1.100000023841858,&#13;
  "width" : 1.100000023841858,&#13;
  "height" : 1.100000023841858&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="3ecd49f9-d7f1-432b-92b5-8548a9307b5e" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getRatings" path="/document/getRatings" id="9970f64f-5b5c-45eb-b83d-cf456e5f34e6"><con:settings/><con:parameters/><con:method name="getRatings" id="a478a666-7cf8-453f-ad0e-a930aa2b2aef" method="GET"><con:description>&#13;
Retrieves the different ratings of a focuments</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "docId" : 0,&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "vote" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e343124a-fc41-4ee2-9b50-423360c01081" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/getVersionContent" path="/document/getVersionContent" id="27ed5b29-24e3-43a9-9284-16727a474d89"><con:settings/><con:parameters/><con:method name="getVersionContent" id="c86ec8d0-2ee9-44aa-8f91-65863f3f561e" method="GET"><con:description>Returns the content of a document using the document ID and version&#13;
Gets the document content by version</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/octet-stream</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="8c650b91-8dd4-4a92-a2b7-bc6848e3f0ff" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/list" path="/document/list" id="30cd7314-c326-443d-a3ed-065d2dfbb340"><con:settings/><con:parameters/><con:method name="list" id="cd361c88-143b-4928-b325-011eeff817db" method="GET"><con:description>Lists Documents by folder identifier&#13;
Lists documents by folder</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "workflowStatusDisplay" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="d3b91502-ddb8-4925-add7-a581b6e201e0" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/listDocuments" path="/document/listDocuments" id="997e49ee-84b0-48c9-92ec-8739b34e9694"><con:settings/><con:parameters/><con:method name="listDocuments" id="af3aa097-577d-4e48-b45f-70b24e301fad" method="GET"><con:description>Lists Documents by folder ID filtering the results by filename&#13;
Lists documents by folder and filename</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>fileName</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "workflowStatusDisplay" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="f25b82f6-472b-4dc8-a469-62b83329c138" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/move" path="/document/move" id="f418c855-56af-41cc-9cd4-ad5b820c5eeb"><con:settings/><con:parameters/><con:method name="move" id="d5aff895-9461-4d0f-b1b9-82bb15b36bf5" method="PUT"><con:description>&#13;
Moves an existing document with the given identifier</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Target Folder ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c192e072-6b57-49af-b6d7-617c6af8f864" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/promoteVersion" path="/document/promoteVersion" id="a5475755-2dc5-463b-8ed1-3a2a3144f736"><con:settings/><con:parameters/><con:method name="promoteVersion" id="01880fb6-d948-4882-8659-19b4e6c80d04" method="GET"><con:description>&#13;
Promotes an old version to the current default one</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter><con:name>version</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e41a5468-da85-4d64-8bbb-7cec87c29c50" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/rateDocument" path="/document/rateDocument" id="eb032d9a-094c-45b2-a598-7fe1ca5c64f2"><con:settings/><con:parameters/><con:method name="rateDocument" id="f18d551f-9d1b-4a2d-9842-8fbdfc9eb054" method="GET"><con:description>&#13;
Add/Update the user's vote for a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter required="true"><con:name>vote</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The user's vote</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "docId" : 0,&#13;
  "userId" : 0,&#13;
  "username" : "string",&#13;
  "date" : "2015-07-20T15:49:04-07:00",&#13;
  "vote" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="bf62b7c5-df99-41ab-88ef-cf8abad25d70" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/replaceFile" path="/document/replaceFile" id="a7f8a0dd-65a4-459e-89cb-a5b128128ac5"><con:settings/><con:parameters/><con:method name="replaceFile" id="d912785d-f7b8-470e-af77-f4222c3d73e5" method="POST"><con:description>Replaces the file associated to a given version.&#13;
Replace the file of a version</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of an existing document to update</con:description></con:parameter><con:parameter><con:name>fileVersion</con:name><con:style>QUERY</con:style><con:description>The file version</con:description></con:parameter><con:parameter><con:name>comment</con:name><con:style>QUERY</con:style><con:description>Comment</con:description></con:parameter><con:parameter required="true"><con:name>filedata</con:name><con:style>QUERY</con:style><con:description>File data</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="902b8ecc-afa0-40c8-9a09-3003db94e527" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/update" path="/document/update" id="99f22074-2f98-4fae-97ae-4a21ab473ce3"><con:settings/><con:parameters/><con:method name="update" id="52adc400-2ed9-44fa-8acb-06494a6359e1" method="PUT"><con:description>Updates the metadata of an existing document. The elements required to operate are the document ID: id and the folder ID: folderId&#13;
Updates an existing document</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:sampleContent><![CDATA[<WSDocument>
   <id>0</id>
   <fileSize>0</fileSize>
   <status>0</status>
   <exportStatus>0</exportStatus>
   <version>string</version>
   <fileVersion>string</fileVersion>
   <date>string</date>
   <publisher>string</publisher>
   <publisherId>0</publisherId>
   <creator>string</creator>
   <creatorId>0</creatorId>
   <type>string</type>
   <lockUserId>0</lockUserId>
   <creation>string</creation>
   <fileName>string</fileName>
   <indexed>0</indexed>
   <signed>0</signed>
   <stamped>0</stamped>
   <tags>string</tags>
   <folderId>0</folderId>
   <templateId>0</templateId>
   <customId>string</customId>
   <immutable>0</immutable>
   <digest>string</digest>
   <exportName>string</exportName>
   <exportId>0</exportId>
   <docRef>0</docRef>
   <docRefType>string</docRefType>
   <deleteUserId>0</deleteUserId>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <hidden>0</hidden>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <multiple>0</multiple>
      <parent>string</parent>
      <stringValues>string</stringValues>
      <Value/>
   </attribute>
   <language>string</language>
   <summary>string</summary>
   <score>0</score>
   <icon>string</icon>
   <comment>string</comment>
   <lastModified>string</lastModified>
   <rating>0</rating>
   <workflowStatus>string</workflowStatus>
   <workflowStatusDisplay>string</workflowStatusDisplay>
   <published>0</published>
   <startPublishing>string</startPublishing>
   <stopPublishing>string</stopPublishing>
   <pages>0</pages>
   <nature>0</nature>
   <formId>0</formId>
   <passwordProtected>0</passwordProtected>
</WSDocument>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "workflowStatusDisplay" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="73b02706-19ca-4a80-acd6-48d6671d1d58" mediaType="application/xml"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request><![CDATA[<WSDocument>\r
   <id>0</id>\r
   <fileSize>0</fileSize>\r
   <status>0</status>\r
   <exportStatus>0</exportStatus>\r
   <version>string</version>\r
   <fileVersion>string</fileVersion>\r
   <date>string</date>\r
   <publisher>string</publisher>\r
   <publisherId>0</publisherId>\r
   <creator>string</creator>\r
   <creatorId>0</creatorId>\r
   <type>string</type>\r
   <lockUserId>0</lockUserId>\r
   <creation>string</creation>\r
   <fileName>string</fileName>\r
   <indexed>0</indexed>\r
   <signed>0</signed>\r
   <stamped>0</stamped>\r
   <tags>string</tags>\r
   <folderId>0</folderId>\r
   <templateId>0</templateId>\r
   <customId>string</customId>\r
   <immutable>0</immutable>\r
   <digest>string</digest>\r
   <exportName>string</exportName>\r
   <exportId>0</exportId>\r
   <docRef>0</docRef>\r
   <docRefType>string</docRefType>\r
   <deleteUserId>0</deleteUserId>\r
   <attribute>\r
      <name>string</name>\r
      <stringValue>string</stringValue>\r
      <intValue>0</intValue>\r
      <doubleValue>1.100000023841858</doubleValue>\r
      <dateValue>string</dateValue>\r
      <type>0</type>\r
      <mandatory>0</mandatory>\r
      <hidden>0</hidden>\r
      <position>0</position>\r
      <label>string</label>\r
      <editor>0</editor>\r
      <setId>0</setId>\r
      <multiple>0</multiple>\r
      <parent>string</parent>\r
      <stringValues>string</stringValues>\r
      <Value/>\r
   </attribute>\r
   <language>string</language>\r
   <summary>string</summary>\r
   <score>0</score>\r
   <icon>string</icon>\r
   <comment>string</comment>\r
   <lastModified>string</lastModified>\r
   <rating>0</rating>\r
   <workflowStatus>string</workflowStatus>\r
   <workflowStatusDisplay>string</workflowStatusDisplay>\r
   <published>0</published>\r
   <startPublishing>string</startPublishing>\r
   <stopPublishing>string</stopPublishing>\r
   <pages>0</pages>\r
   <nature>0</nature>\r
   <formId>0</formId>\r
   <passwordProtected>0</passwordProtected>\r
</WSDocument>]]></con:request><con:parameters/></con:request><con:request name="Request 2" id="90dee242-75df-43b8-a7d5-7f9eec0f7fa9" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request>{\r
  "id" : 0,\r
  "fileSize" : 0,\r
  "status" : 0,\r
  "exportStatus" : 0,\r
  "version" : "string",\r
  "fileVersion" : "string",\r
  "date" : "string",\r
  "publisher" : "string",\r
  "publisherId" : 0,\r
  "creator" : "string",\r
  "creatorId" : 0,\r
  "type" : "string",\r
  "lockUserId" : 0,\r
  "creation" : "string",\r
  "fileName" : "string",\r
  "indexed" : 0,\r
  "signed" : 0,\r
  "stamped" : 0,\r
  "tags" : [ "string" ],\r
  "folderId" : 0,\r
  "templateId" : 0,\r
  "customId" : "string",\r
  "immutable" : 0,\r
  "digest" : "string",\r
  "exportName" : "string",\r
  "exportId" : 0,\r
  "docRef" : 0,\r
  "docRefType" : "string",\r
  "deleteUserId" : 0,\r
  "attributes" : [ {\r
    "name" : "string",\r
    "stringValue" : "string",\r
    "intValue" : 0,\r
    "doubleValue" : 1.100000023841858,\r
    "dateValue" : "string",\r
    "type" : 0,\r
    "mandatory" : 0,\r
    "hidden" : 0,\r
    "position" : 0,\r
    "label" : "string",\r
    "editor" : 0,\r
    "setId" : 0,\r
    "multiple" : 0,\r
    "parent" : "string",\r
    "stringValues" : "string",\r
    "value" : { }\r
  } ],\r
  "language" : "string",\r
  "summary" : "string",\r
  "score" : 0,\r
  "icon" : "string",\r
  "comment" : "string",\r
  "lastModified" : "string",\r
  "rating" : 0,\r
  "workflowStatus" : "string",\r
  "workflowStatusDisplay" : "string",\r
  "published" : 0,\r
  "startPublishing" : "string",\r
  "stopPublishing" : "string",\r
  "pages" : 0,\r
  "nature" : 0,\r
  "formId" : 0,\r
  "passwordProtected" : 0\r
}</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/document/upload" path="/document/upload" id="bfc0470b-6693-4b41-8d39-579306ea4cb9"><con:settings/><con:parameters/><con:method name="upload" id="8f4bfb22-8e9e-4c1e-b054-76de981fea31" method="POST"><con:description>Creates or updates an existing document, if used in update mode docId must be provided, when used in create mode folderId is required. Returns the ID of the created/updated document. &amp;lt;br/&amp;gt;Example: curl -u admin:admin -H ''Accept: application/json'' -X POST -F folderId=4 -F filename=newDoc.txt -F filedata=@newDoc.txt http://localhost:8080/services/rest/document/upload&#13;
Uploads a document</con:description><con:settings/><con:parameters><con:parameter><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of an existing document to update</con:description></con:parameter><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:description>Folder ID where to place the document</con:description></con:parameter><con:parameter><con:name>release</con:name><con:style>QUERY</con:style><con:description>Indicates whether to create or not a new major release of an updated document</con:description></con:parameter><con:parameter required="true"><con:name>filename</con:name><con:style>QUERY</con:style><con:description>File name</con:description></con:parameter><con:parameter><con:name>language</con:name><con:value>en</con:value><con:style>QUERY</con:style><con:default>en</con:default><con:description>Language of the document (ISO 639-2)</con:description></con:parameter><con:parameter required="true"><con:name>filedata</con:name><con:style>QUERY</con:style><con:description>File data</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>multipart/form-data</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="28d1ef13-5309-4951-9aca-6e7925fa88f4" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/create" path="/folder/create" id="5e63fefa-2641-48a8-b982-06e94bfe9156"><con:settings/><con:parameters/><con:method name="createFolderByModel" id="fa2ff178-7d1c-49a8-be5f-1832fe30ee57" method="POST"><con:description>The 'folder' metadata comes in the POST request body (encoded as JSON). Note: folder object must specify at least fields name and parentId&#13;
Creates a new folder</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="945c5c9f-29c6-41bf-885f-76e419f10c58" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request>{\r
  "id" : 0,\r
  "name" : "string",\r
  "parentId" : 0,\r
  "description" : "string",\r
  "lastModified" : "string",\r
  "type" : 0,\r
  "templateId" : 0,\r
  "templateLocked" : 0,\r
  "creation" : "string",\r
  "creator" : "string",\r
  "position" : 0,\r
  "hidden" : 0,\r
  "foldRef" : 0,\r
  "securityRef" : 0,\r
  "attributes" : [ {\r
    "name" : "string",\r
    "stringValue" : "string",\r
    "intValue" : 0,\r
    "doubleValue" : 1.100000023841858,\r
    "dateValue" : "string",\r
    "type" : 0,\r
    "mandatory" : 0,\r
    "hidden" : 0,\r
    "position" : 0,\r
    "label" : "string",\r
    "editor" : 0,\r
    "setId" : 0,\r
    "multiple" : 0,\r
    "parent" : "string",\r
    "stringValues" : "string",\r
    "value" : { }\r
  } ],\r
  "storage" : 0,\r
  "tags" : [ "string" ]\r
}</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createFolder" path="/folder/createFolder" id="8bfb6712-0a07-447d-bd20-20a4ad70dfb0"><con:settings/><con:parameters/><con:method name="createFolder" id="ea26d4c7-193f-4e44-b167-fa63f2f73a9a" method="POST"><con:description>&#13;
Creates a subfolder</con:description><con:settings/><con:parameters><con:parameter><con:name>parentId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of the parent folder</con:description></con:parameter><con:parameter><con:name>name</con:name><con:style>QUERY</con:style><con:description>Name of the new folder</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>0</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>0</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>&lt;long>0&lt;/long></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="8ed03053-dc7c-461d-8352-751c8b5ddc15" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createPath" path="/folder/createPath" id="6cb177fe-0f64-4227-840c-9a77e9403465"><con:settings/><con:parameters/><con:method name="createPath" id="45bbaeb3-4939-4a1b-ae4c-a84f412925a4" method="POST"><con:description>Creates a path of folders starting from a parent folder. It returns the metadata object representing the latest created folder in the path&#13;
Creates a path</con:description><con:settings/><con:parameters><con:parameter><con:name>parentId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The parent folder ID from which the new path will start</con:description></con:parameter><con:parameter><con:name>path</con:name><con:style>QUERY</con:style><con:description>The path to create</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="41c2bde6-2ee9-43aa-9ea4-a39addf048e3" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createSimple" path="/folder/createSimple" id="fc049abf-5318-4901-8a3f-4b8aecb2036d"><con:settings/><con:parameters/><con:method name="createSimple" id="d9e54ace-4bd3-4cc4-912d-3821608cd427" method="POST"><con:description>Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path. Example: curl -u admin:admin -X POST -H ''Content-Type: text/plain'' -H ''Accept: application/json'' -d ''/Default/Curl/newfolder'' http://localhost:8080/services/rest/folder/createSimple&#13;
Creates folders from path</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>text/plain</con:mediaType><con:params/><con:sampleContent/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{ }</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>text/plain</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="d6c807f1-0368-40fd-92cf-27f28e8cc1bb" mediaType="text/plain"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:parameters/></con:request><con:request name="Request 2" id="e70ca3c7-73d1-4a41-b27d-d840a89d9a4b" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request>{ }</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createSimpleForm" path="/folder/createSimpleForm" id="08b24a47-0dfd-46b2-b4ae-85f36bba4cec"><con:settings/><con:parameters/><con:method name="createSimpleForm" id="fd4134d6-042c-43e0-a608-b5649cb541bf" method="POST"><con:description>Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path&#13;
Creates folders from path</con:description><con:settings/><con:parameters><con:parameter><con:name>folderPath</con:name><con:style>QUERY</con:style><con:description>The string representing the path to be created</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="de03cade-8f68-49c4-9f23-0b6e3a4aae1b" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/createSimpleJSON" path="/folder/createSimpleJSON" id="a67e627c-0ea5-4e7a-bd01-05822a84016d"><con:settings/><con:parameters/><con:method name="createSimpleJSON" id="07bef2a5-ac7a-412e-823a-486a4e7887a4" method="POST"><con:description>Creates folders using an input path. All the folders in the path will be created. It returns the metadata object representing the latest created folder in the path&#13;
Creates folders from path</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{ }</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="b42c4cd7-d7cb-464c-84c5-d21c7e6f02ee" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request>{ }</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/delete" path="/folder/delete" id="a374c128-707b-455c-8b23-06615051f467"><con:settings/><con:parameters/><con:method name="deleteFolder" id="7944862e-f7d4-4a3a-9345-0a19272e4058" method="DELETE"><con:description>&#13;
Deletes a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of the folder to be deleted</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="25f6d2fa-07ce-4c52-aca9-a75404c4e517" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/findByPath" path="/folder/findByPath" id="72075a69-e174-4ded-882f-b7434812289f"><con:settings/><con:parameters/><con:method name="findByPath" id="c5f744cd-e40a-4a4b-b68f-efae39b62657" method="GET"><con:description>Finds the folder at the specified path&#13;
Gets a folder</con:description><con:settings/><con:parameters><con:parameter><con:name>path</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="37038b64-21bd-4147-bda7-334afec66f5c" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/getFolder" path="/folder/getFolder" id="69b29fb4-95a2-4fe6-ac2f-1dcdd2f0ceb8"><con:settings/><con:parameters/><con:method name="getFolder" id="cc1c0f6a-99e8-40ab-beab-47c8bacf4395" method="GET"><con:description>Gets the folder with the specified ID&#13;
Gets a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The folder ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent><![CDATA[<folder>
   <id>0</id>
   <name>string</name>
   <parentId>0</parentId>
   <description>string</description>
   <lastModified>string</lastModified>
   <type>0</type>
   <templateId>0</templateId>
   <templateLocked>0</templateLocked>
   <creation>string</creation>
   <creator>string</creator>
   <position>0</position>
   <hidden>0</hidden>
   <foldRef>0</foldRef>
   <securityRef>0</securityRef>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <hidden>0</hidden>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <multiple>0</multiple>
      <parent>string</parent>
      <stringValues>string</stringValues>
      <Value/>
   </attribute>
   <storage>0</storage>
   <tags>string</tags>
</folder>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c5077d1e-0d21-466a-b8b3-3d0adde461e1" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/getPath" path="/folder/getPath" id="491ccbfb-9474-48c6-ab56-843450be6a9e"><con:settings/><con:parameters/><con:method name="getPath" id="4d9dbb2f-a7ce-45ae-8d0f-46861456f91c" method="GET"><con:description>Returns the folders that make up the path to the folder in input.&#13;
Gets a path of folders</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder identifier (ID)</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="5a6a91b6-fc2e-42e0-9584-ad426306b345" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/getPathString" path="/folder/getPathString" id="f0b60c42-1608-4f40-8277-d3db4e2a3c92"><con:settings/><con:parameters/><con:method name="getPathString" id="44a14fe8-5c35-48e4-b873-87966d435bdd" method="GET"><con:description>Returns the path to the folder in input.&#13;
Gets a path</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder identifier (ID)</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>"string"</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="ca16b288-7b5b-4985-ae42-5da444c76c77" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/getRootFolder" path="/folder/getRootFolder" id="188cd559-bf64-4075-a9cf-a74b6513bfdb"><con:settings/><con:parameters/><con:method name="getRootFolder" id="902357e6-7d3f-4832-ba48-e745b9522db2" method="GET"><con:description>Gets the root folder in the current tenant&#13;
Gets the root folderr</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="0c2cee14-81af-4a56-b00c-11e46778fb97" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/listChildren" path="/folder/listChildren" id="1d498b81-69ba-43d8-a04f-cc45cbacd054"><con:settings/><con:parameters/><con:method name="listChildren" id="8e541513-33d1-4e79-a5e5-32df820af94c" method="GET"><con:description>Returns the list of child folders. Example: curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4&#13;
Lists the child folders</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>The ID of the parent folder</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
} ]</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent><![CDATA[<folder>
   <id>0</id>
   <name>string</name>
   <parentId>0</parentId>
   <description>string</description>
   <lastModified>string</lastModified>
   <type>0</type>
   <templateId>0</templateId>
   <templateLocked>0</templateLocked>
   <creation>string</creation>
   <creator>string</creator>
   <position>0</position>
   <hidden>0</hidden>
   <foldRef>0</foldRef>
   <securityRef>0</securityRef>
   <attribute>
      <name>string</name>
      <stringValue>string</stringValue>
      <intValue>0</intValue>
      <doubleValue>1.100000023841858</doubleValue>
      <dateValue>string</dateValue>
      <type>0</type>
      <mandatory>0</mandatory>
      <hidden>0</hidden>
      <position>0</position>
      <label>string</label>
      <editor>0</editor>
      <setId>0</setId>
      <multiple>0</multiple>
      <parent>string</parent>
      <stringValues>string</stringValues>
      <Value/>
   </attribute>
   <storage>0</storage>
   <tags>string</tags>
</folder>]]></con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="26f8642a-40db-424a-b420-7c050915d910" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/move" path="/folder/move" id="7634ab63-b68c-4bb0-8ab8-1c6cdd31d0aa"><con:settings/><con:parameters/><con:method name="moveFolder" id="74c72422-c039-474c-aa73-c0c7f38e428e" method="PUT"><con:description>Updates a folder by changing its parent. The folder is moved to the new parent folder.&#13;
Moves a folder</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>parentId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="5236da6b-ecea-4bba-a8bc-132f8bfa0f83" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/rename" path="/folder/rename" id="e39f29c8-f7d9-4657-b74d-f201f2713f00"><con:settings/><con:parameters/><con:method name="rename" id="1c99b34f-d550-4194-af84-4093a5fff508" method="PUT"><con:description>Changes the name of a given folder&#13;
Renames a folder</con:description><con:settings/><con:parameters><con:parameter><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="92d8a80c-1cce-4e91-87a2-5cdfdabd932c" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/folder/update" path="/folder/update" id="a467566a-3227-4432-bf77-174f6953fc91"><con:settings/><con:parameters/><con:method name="updateFolder" id="a9fbdac9-191f-4488-9bd4-cd8e0beda695" method="POST"><con:description>Updates a folder changing its metadata. The folder object in input must specify the property id&#13;
Updates a folder</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c417a8de-e9ce-444d-981a-c7887c6ebb07" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request>{\r
  "id" : 0,\r
  "name" : "string",\r
  "parentId" : 0,\r
  "description" : "string",\r
  "lastModified" : "string",\r
  "type" : 0,\r
  "templateId" : 0,\r
  "templateLocked" : 0,\r
  "creation" : "string",\r
  "creator" : "string",\r
  "position" : 0,\r
  "hidden" : 0,\r
  "foldRef" : 0,\r
  "securityRef" : 0,\r
  "attributes" : [ {\r
    "name" : "string",\r
    "stringValue" : "string",\r
    "intValue" : 0,\r
    "doubleValue" : 1.100000023841858,\r
    "dateValue" : "string",\r
    "type" : 0,\r
    "mandatory" : 0,\r
    "hidden" : 0,\r
    "position" : 0,\r
    "label" : "string",\r
    "editor" : 0,\r
    "setId" : 0,\r
    "multiple" : 0,\r
    "parent" : "string",\r
    "stringValues" : "string",\r
    "value" : { }\r
  } ],\r
  "storage" : 0,\r
  "tags" : [ "string" ]\r
}</con:request><con:parameters/></con:request></con:method></con:resource><con:resource name="/search/find" path="/search/find" id="2ea19411-3c5e-4e8c-8281-dc0f383e5f0a"><con:settings/><con:parameters/><con:method name="find" id="97e1ea9f-9a3a-480b-8ecb-e738a584c92f" method="POST"><con:description>Runs a search on the server&#13;
Search documents</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:sampleContent>{&#13;
  "maxHits" : 0,&#13;
  "type" : 0,&#13;
  "expression" : "string",&#13;
  "name" : "string",&#13;
  "description" : "string",&#13;
  "topOperator" : "string",&#13;
  "caseSensitive" : 0,&#13;
  "retrieveAliases" : 0,&#13;
  "filterIds" : [ 0 ],&#13;
  "folderId" : 0,&#13;
  "searchInSubPath" : 0,&#13;
  "expressionLanguage" : "string",&#13;
  "sizeMin" : 0,&#13;
  "sizeMax" : 0,&#13;
  "format" : "string",&#13;
  "fields" : [ "string" ],&#13;
  "language" : "string",&#13;
  "dateFrom" : "string",&#13;
  "dateTo" : "string",&#13;
  "creationFrom" : "string",&#13;
  "creationTo" : "string",&#13;
  "template" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>{&#13;
  "time" : 0,&#13;
  "estimatedHitsNumber" : 0,&#13;
  "hits" : [ {&#13;
    "id" : 0,&#13;
    "fileSize" : 0,&#13;
    "status" : 0,&#13;
    "exportStatus" : 0,&#13;
    "version" : "string",&#13;
    "fileVersion" : "string",&#13;
    "date" : "string",&#13;
    "publisher" : "string",&#13;
    "publisherId" : 0,&#13;
    "creator" : "string",&#13;
    "creatorId" : 0,&#13;
    "type" : "string",&#13;
    "lockUserId" : 0,&#13;
    "creation" : "string",&#13;
    "fileName" : "string",&#13;
    "indexed" : 0,&#13;
    "signed" : 0,&#13;
    "stamped" : 0,&#13;
    "tags" : [ "string" ],&#13;
    "folderId" : 0,&#13;
    "templateId" : 0,&#13;
    "customId" : "string",&#13;
    "immutable" : 0,&#13;
    "digest" : "string",&#13;
    "exportName" : "string",&#13;
    "exportId" : 0,&#13;
    "docRef" : 0,&#13;
    "docRefType" : "string",&#13;
    "deleteUserId" : 0,&#13;
    "attributes" : [ {&#13;
      "name" : "string",&#13;
      "stringValue" : "string",&#13;
      "intValue" : 0,&#13;
      "doubleValue" : 1.100000023841858,&#13;
      "dateValue" : "string",&#13;
      "type" : 0,&#13;
      "mandatory" : 0,&#13;
      "hidden" : 0,&#13;
      "position" : 0,&#13;
      "label" : "string",&#13;
      "editor" : 0,&#13;
      "setId" : 0,&#13;
      "multiple" : 0,&#13;
      "parent" : "string",&#13;
      "stringValues" : "string",&#13;
      "value" : { }&#13;
    } ],&#13;
    "language" : "string",&#13;
    "summary" : "string",&#13;
    "score" : 0,&#13;
    "icon" : "string",&#13;
    "comment" : "string",&#13;
    "lastModified" : "string",&#13;
    "rating" : 0,&#13;
    "workflowStatus" : "string",&#13;
    "workflowStatusDisplay" : "string",&#13;
    "published" : 0,&#13;
    "startPublishing" : "string",&#13;
    "stopPublishing" : "string",&#13;
    "pages" : 0,&#13;
    "nature" : 0,&#13;
    "formId" : 0,&#13;
    "passwordProtected" : 0&#13;
  } ],&#13;
  "moreHits" : 0,&#13;
  "totalHits" : 0&#13;
}</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="9730857d-3daf-489c-bfa4-d55cb0b95261" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://localhost:8080</con:endpoint><con:request>{\r
  "dateFrom" : "2022-07-12",\r
}</con:request><con:originalUri>https://localhost/services/rest/search/find</con:originalUri><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/addDocumentTags" path="/tag/addDocumentTags" id="ba5663f6-14dd-457f-8e5a-5c3142501d1b"><con:settings/><con:parameters/><con:method name="addDocumentTags" id="2774519f-3fb9-455d-ae4d-6f18da14fb38" method="POST"><con:description>&#13;
Appends new tags to a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="6b17a82a-3560-4bfd-bafb-5cd17564246a" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/addFolderTags" path="/tag/addFolderTags" id="8c8ae792-586c-454c-a59d-b06e32f38596"><con:settings/><con:parameters/><con:method name="addFolderTags" id="18227a7b-5298-4eaa-ac44-6e5d437b4232" method="POST"><con:description>&#13;
Appends new tags to a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="2ce4da45-739d-4a07-96d0-589a0fe11dae" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/findDocumentsByTag" path="/tag/findDocumentsByTag" id="05372720-f493-4983-a2f5-ca5ff871804a"><con:settings/><con:parameters/><con:method name="findDocumentsByTag" id="38ff2a73-a775-4fe4-a265-04cd32363cf2" method="GET"><con:description>&#13;
Finds authorized documents for the current user having a specified tag.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>tag</con:name><con:style>QUERY</con:style><con:description>The tag</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "fileSize" : 0,&#13;
  "status" : 0,&#13;
  "exportStatus" : 0,&#13;
  "version" : "string",&#13;
  "fileVersion" : "string",&#13;
  "date" : "string",&#13;
  "publisher" : "string",&#13;
  "publisherId" : 0,&#13;
  "creator" : "string",&#13;
  "creatorId" : 0,&#13;
  "type" : "string",&#13;
  "lockUserId" : 0,&#13;
  "creation" : "string",&#13;
  "fileName" : "string",&#13;
  "indexed" : 0,&#13;
  "signed" : 0,&#13;
  "stamped" : 0,&#13;
  "tags" : [ "string" ],&#13;
  "folderId" : 0,&#13;
  "templateId" : 0,&#13;
  "customId" : "string",&#13;
  "immutable" : 0,&#13;
  "digest" : "string",&#13;
  "exportName" : "string",&#13;
  "exportId" : 0,&#13;
  "docRef" : 0,&#13;
  "docRefType" : "string",&#13;
  "deleteUserId" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "language" : "string",&#13;
  "summary" : "string",&#13;
  "score" : 0,&#13;
  "icon" : "string",&#13;
  "comment" : "string",&#13;
  "lastModified" : "string",&#13;
  "rating" : 0,&#13;
  "workflowStatus" : "string",&#13;
  "workflowStatusDisplay" : "string",&#13;
  "published" : 0,&#13;
  "startPublishing" : "string",&#13;
  "stopPublishing" : "string",&#13;
  "pages" : 0,&#13;
  "nature" : 0,&#13;
  "formId" : 0,&#13;
  "passwordProtected" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="a1face25-edaa-4b39-848c-1193d51ab127" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/findFoldersByTag" path="/tag/findFoldersByTag" id="edb4ffd7-b1f0-4088-8fa0-adef488a1a4b"><con:settings/><con:parameters/><con:method name="findFoldersByTag" id="06eba839-aff4-4bae-9e93-015aecad342b" method="GET"><con:description>&#13;
Finds authorized folders for the current user having a specified tag.</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>tag</con:name><con:style>QUERY</con:style><con:description>The tag</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "id" : 0,&#13;
  "name" : "string",&#13;
  "parentId" : 0,&#13;
  "description" : "string",&#13;
  "lastModified" : "string",&#13;
  "type" : 0,&#13;
  "templateId" : 0,&#13;
  "templateLocked" : 0,&#13;
  "creation" : "string",&#13;
  "creator" : "string",&#13;
  "position" : 0,&#13;
  "hidden" : 0,&#13;
  "foldRef" : 0,&#13;
  "securityRef" : 0,&#13;
  "attributes" : [ {&#13;
    "name" : "string",&#13;
    "stringValue" : "string",&#13;
    "intValue" : 0,&#13;
    "doubleValue" : 1.100000023841858,&#13;
    "dateValue" : "string",&#13;
    "type" : 0,&#13;
    "mandatory" : 0,&#13;
    "hidden" : 0,&#13;
    "position" : 0,&#13;
    "label" : "string",&#13;
    "editor" : 0,&#13;
    "setId" : 0,&#13;
    "multiple" : 0,&#13;
    "parent" : "string",&#13;
    "stringValues" : "string",&#13;
    "value" : { }&#13;
  } ],&#13;
  "storage" : 0,&#13;
  "tags" : [ "string" ]&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="e75de2da-d5a8-4283-97d6-a2a9ca862f19" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getDocumentTags" path="/tag/getDocumentTags" id="96196f28-f393-4e88-a42c-faa352a491e2"><con:settings/><con:parameters/><con:method name="getDocumentTags" id="0849ce01-0648-43f4-a36c-75397cb7ae9e" method="GET"><con:description>&#13;
Gets all the tags of a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ "string" ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="09bb4ace-2c67-4627-84a1-70d73b1dd6bb" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getFolderTags" path="/tag/getFolderTags" id="7e4aee6b-abad-4180-a509-99791dad81b5"><con:settings/><con:parameters/><con:method name="getFolderTags" id="b24e2887-3dbb-457b-8cdb-18ab1399f670" method="GET"><con:description>&#13;
Gets all the tags of a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder ID</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ "string" ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="6a9ad017-aa99-4fe9-949f-595f4b1b14b8" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getTagCloud" path="/tag/getTagCloud" id="383d5376-2787-438e-9654-3d523c2bdcc4"><con:settings/><con:parameters/><con:method name="getTagCloud" id="1238c8ba-dc9d-4e76-b358-051f54c0a340" method="GET"><con:description>&#13;
Retrieves all tag clouds in the repository</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ {&#13;
  "tag" : "string",&#13;
  "count" : 0,&#13;
  "scale" : 0&#13;
} ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="83a53ecb-0b9a-487b-92d9-2e7a2d7ef81c" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/getTags" path="/tag/getTags" id="ef1b5d18-c5a9-4e78-94ce-9386048180f1"><con:settings/><con:parameters/><con:method name="getTags" id="6973bee2-dd09-4ab9-a534-796da5a2cf4e" method="GET"><con:description>&#13;
Gets all the tags used in the sysem</con:description><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:sampleContent>[ "string" ]</con:sampleContent></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c5777d4b-8534-44e9-a442-3097b9e2323b" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/setDocumentTags" path="/tag/setDocumentTags" id="dcbd1d2d-9501-4992-bb0b-2e72c4f4f97a"><con:settings/><con:parameters/><con:method name="setDocumentTags" id="2ff1c9e8-b1f9-44cd-bc7b-ab7889ba4571" method="POST"><con:description>&#13;
Set the tags of a document</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>docId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Document ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="ce82d5fc-993f-4179-b435-4dd0c723781f" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/tag/setFolderTags" path="/tag/setFolderTags" id="4e167c77-b64b-410e-a90a-9a46d60c9571"><con:settings/><con:parameters/><con:method name="setFolderTags" id="b1c3e298-7eac-4b50-8544-7875bab64799" method="POST"><con:description>&#13;
Sets the tags of a folder</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>folderId</con:name><con:style>QUERY</con:style><con:dataType>integer</con:dataType><con:description>Folder ID</con:description></con:parameter><con:parameter><con:name>tag</con:name><con:style>QUERY</con:style><con:dataType>array</con:dataType><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status/><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="ff26ed34-d7b3-430a-b705-bcfcd6e72902" mediaType="application/json"><con:settings/><con:endpoint>https://localhost:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="68bc13a0-870d-482c-a5fe-c286d131fb1d" name="FOLDER"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="01d85ae5-7844-4141-a462-120c5eb19cd9" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="CREATEFOLDER" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request" id="a631aec3-6b23-4936-b88f-eb6253d08be2"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/folder/create" methodName="createFolderByModel" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="4f8f7b1c-5620-4cef-b85f-01457ddbdf33" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{
	"id": 1,
  "name": "FolderTest2",
  "parentId": 4,
  "description": "the first folder",
  "type": 0,
  "templateLocked": 0,
  "position": 0,
  "hidden": 0
}</con:request><con:originalUri>http://localhost/logicaldoc/services/rest/folder/create</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d4e314af-3c49-49db-baca-cf4913b9f814" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="9b18b788-a786-49d6-8ee8-02976958a507" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="058a19bb-b2c6-4908-b880-16356cd7d9d1" name="DOCUMENT"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b92add65-c4d7-412c-85c7-c8e93e192273" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="CREATE DOCUMENT" searchProperties="true" timeout="0"><con:settings/><con:testStep type="datasource" name="Data Source" id="3cbe48b5-e829-4587-9547-bcf4629e699b"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="File"><con:configuration><fileName>C:/formation/projet2/propertie.txt</fileName><separator>,</separator><trim>true</trim><charset>Cp1252</charset><quotedValues>true</quotedValues></con:configuration></con:dataSource><con:shared>true</con:shared><con:restartShared>true</con:restartShared><con:property>content</con:property><con:restartOnRun>true</con:restartOnRun><con:stopDatasourceExhausted>false</con:stopDatasourceExhausted></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="9fd08ebc-a347-407c-bd6e-607e2d878dfc"><con:settings/><con:config><script>
payload = '{ "language":"en","fileName":"propertie.txt","folderId":102 }'
upfile = "‪C:\formation\projet2\propertie.txt"
files = { 
  'document': (None, payload, 'application/json'),
  'content': (os.path.basename(upfile), open(upfile, 'rb'), 'application/octet-stream')
  } 
url = 'http://localhost:8080/services/rest/document/create'
headers = {'Content-Type': 'multipart/form-data'}
r = requests.post(url, files=files, headers=headers, auth=('admin', 'admin'))
print r
print r.content</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Request" id="e5189943-4b19-4105-8b64-53a1540ca452"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/document/create" methodName="createDocument" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="e053a016-95f3-421a-b6c8-414f36fef475" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/document/create</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ee9be3cb-d89c-47d7-8dbe-bcc2a42b92b7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="63a35e98-fb59-4b64-8d26-c24d0c4b7fc6" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:attachment><con:name>propertie.txt</con:name><con:contentType>text/plain</con:contentType><con:size>7</con:size><con:contentId>content</con:contentId><con:data>UEsDBBQACAgIACp4iFUAAAAAAAAAAAAAAAANAAAAcHJvcGVydGllLnR4dAtxDQ7h5OUCAFBLBwg3CBV0CQAAAAcAAABQSwECFAAUAAgICAAqeIhVNwgVdAkAAAAHAAAADQAAAAAAAAAAAAAAAAAAAAAAcHJvcGVydGllLnR4dFBLBQYAAAAAAQABADsAAABEAAAAAAA=</con:data><con:id>1bece863-ddb1-4375-a57c-4b966146f6c2</con:id></con:attachment><con:attachment><con:name>payload.json</con:name><con:contentType>text/javascript</con:contentType><con:size>153</con:size><con:contentId>payload.json</con:contentId><con:data>UEsDBBQACAgIAFGAiFUAAAAAAAAAAAAAAAAMAAAAcGF5bG9hZC5qc29uq+blUlBQykxRslIw0gGz0zJzUoMzq1KBIhYQkZLMkhwQV6kktbgEDJQgEimJJWBxIwMjI11DI10DC6hESWUBREMFTCnIVL/EXLBoQVF+QWpRSWaqHpJ8fk5KapEnyB2GBoa8XLUAUEsHCJWhLUlmAAAAmQAAAFBLAQIUABQACAgIAFGAiFWVoS1JZgAAAJkAAAAMAAAAAAAAAAAAAAAAAAAAAABwYXlsb2FkLmpzb25QSwUGAAAAAAEAAQA6AAAAoAAAAAAA</con:data><con:id>7ef7d9d5-10ce-4036-8852-b28f85f64cea</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="document" value="file:payload.json"/><con:entry key="content" value="file:propertie.txt"/></con:parameters><con:parameterOrder><con:entry>document</con:entry><con:entry>content</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="REST Request 3" id="65ee198a-ef42-4491-99f6-4e0c1e12eb63"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/document/create" methodName="createDocument" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request 3" id="e053a016-95f3-421a-b6c8-414f36fef475" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/document/create</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9b5e9909-460f-46b1-ac7f-e8fc09c61435" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="27a47605-a08a-4874-98d7-845498a97c2b" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:attachment><con:name>propertie.txt</con:name><con:contentType>text/plain</con:contentType><con:size>7</con:size><con:contentId>content</con:contentId><con:data>UEsDBBQACAgIACp4iFUAAAAAAAAAAAAAAAANAAAAcHJvcGVydGllLnR4dAtxDQ7h5OUCAFBLBwg3CBV0CQAAAAcAAABQSwECFAAUAAgICAAqeIhVNwgVdAkAAAAHAAAADQAAAAAAAAAAAAAAAAAAAAAAcHJvcGVydGllLnR4dFBLBQYAAAAAAQABADsAAABEAAAAAAA=</con:data><con:id>1bece863-ddb1-4375-a57c-4b966146f6c2</con:id></con:attachment><con:attachment><con:name>payload.json</con:name><con:contentType>text/javascript</con:contentType><con:size>162</con:size><con:contentId>document</con:contentId><con:part xsi:nil="true"/><con:data>UEsDBBQACAgIAMSAiFUAAAAAAAAAAAAAAAAMAAAAcGF5bG9hZC5qc29uq+blUlBQykxRslIw0gGz0zJzUoMzq1KBIhYQkZLMkhwQV6kktbgEDJQgEimJJWBxIwMjI11DI10DCwUDSytjMysjA6iKksoCiM4KmB6Q8X6JuWDRgqL8gtSiksxUPST5/JyU1CJPkIMMDQx5uWoBUEsHCDFvwAxvAAAAogAAAFBLAQIUABQACAgIAMSAiFUxb8AMbwAAAKIAAAAMAAAAAAAAAAAAAAAAAAAAAABwYXlsb2FkLmpzb25QSwUGAAAAAAEAAQA6AAAAqQAAAAAA</con:data><con:id>ca7c0bb6-4be1-42a2-9508-4ab11f40110f</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="document" value="file:payload.json"/><con:entry key="content" value="file:propertie.txt"/></con:parameters><con:parameterOrder><con:entry>document</con:entry><con:entry>content</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="REST Request 4" id="a1e30c33-31c0-4c30-8895-4867532d4f2f"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/document/create" methodName="createDocument" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request 4" id="e053a016-95f3-421a-b6c8-414f36fef475" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/document/create</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ef6e1593-2658-4925-b127-aa06165003cd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="dd6efeae-b030-44cc-b36b-864cc27357dc" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:attachment><con:name>propertie.txt</con:name><con:contentType>text/plain</con:contentType><con:size>7</con:size><con:contentId>content</con:contentId><con:data>UEsDBBQACAgIACp4iFUAAAAAAAAAAAAAAAANAAAAcHJvcGVydGllLnR4dAtxDQ7h5OUCAFBLBwg3CBV0CQAAAAcAAABQSwECFAAUAAgICAAqeIhVNwgVdAkAAAAHAAAADQAAAAAAAAAAAAAAAAAAAAAAcHJvcGVydGllLnR4dFBLBQYAAAAAAQABADsAAABEAAAAAAA=</con:data><con:id>1bece863-ddb1-4375-a57c-4b966146f6c2</con:id></con:attachment><con:attachment><con:name>payload.json</con:name><con:contentType>text/javascript</con:contentType><con:size>140</con:size><con:contentId>payload.json</con:contentId><con:data>UEsDBBQACAgIAJCBiFUAAAAAAAAAAAAAAAAMAAAAcGF5bG9hZC5qc29uq1ZQykxRslIw0lFQSsvMSQ3OrEoFci2A3JLMkhwQW6kktbgEDJSAoimJJWBBIwMjI11DI10DCwUDSytjMysjA5B0SWUBRE8FWDXISL/EXLBQQVF+QWpRSWaqHkwyPycltcgTZL2hgaFCLQBQSwcIebWf0GsAAACMAAAAUEsBAhQAFAAICAgAkIGIVXm1n9BrAAAAjAAAAAwAAAAAAAAAAAAAAAAAAAAAAHBheWxvYWQuanNvblBLBQYAAAAAAQABADoAAAClAAAAAAA=</con:data><con:id>a347c4a1-0d8b-4ff7-9be6-e6ca0f4a5535</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="document" value="file:payload.json"/><con:entry key="content" value="file:propertie.txt"/></con:parameters><con:parameterOrder><con:entry>document</con:entry><con:entry>content</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="52a73a56-5090-41af-ac9c-742bba8f797a" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="FINDDOCUMENTBYTAG" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request 2" id="989156a6-fa00-42d0-9ff0-f55efe5bf352"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/tag/addDocumentTags" methodName="addDocumentTags" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request 2" id="f56328ae-8f87-4b1d-9adb-d2904db44cf3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/tag/addDocumentTags</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f2675bcb-3217-486f-bc22-1d09d0959aaf" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="c4ba72a6-97bb-4056-844d-79d8467f7d50" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="docId" value="103"/><con:entry key="tag" value="test"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="REST Request" id="b0777eb7-33fa-4c66-bd12-935c03f63bb5"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/tag/findDocumentsByTag" methodName="findDocumentsByTag" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="b1c8bf05-5f8c-4c1d-8a6f-a03210b3a8d1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/tag/findDocumentsByTag</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9e7da57f-8d46-4c51-8ba2-36827830e99b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="eb454a19-031f-4435-bcf8-9e969d9b3974" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="tag" value="test"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3e699c26-5d66-471f-9148-3ca526cfa33c" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DELETEDOCUMENT" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request" id="4222181d-7057-4a26-be20-b8e06ea19ab7"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/document/delete" methodName="delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="8fcde29e-b614-4b14-ac35-4e94f5b3c550" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/document/delete</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d6cb6f3b-dbe4-43cf-9cd3-2dd39accc537" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="daf376c9-b4b7-4c7f-898e-2f0a7fca9c87" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="docId" value="100"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="cb7ddb0a-4aac-42e2-be37-8311a580cf42" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="UPDATEDOCUMENT" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request" id="0cd6e9c2-8edf-4122-b058-f77c5400a9d8"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/document/update" methodName="update" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="1b1ca8d0-b6a1-4623-9d1e-52aa547e8d9d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{\r
  "id" : 102,\r
  "fileSize" : 9,\r
  "title" : "test",\r\r
  "date" : "2022-08-12",\r
  "type" : "txt",\r
  "fileName" : "test",\r
  "tags" : [ "test" ],\r
  "folderId" : 102,\r
  "attributes" : [ {\r
    "name" : "test",\r
    "type" : 0,\r
    "mandatory" : 0,\r
    "editor" : 0,\r
  } ]
}</con:request><con:originalUri>http://localhost/logicaldoc/services/rest/document/update</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="93426ff3-5421-40d1-b09b-42a2c4c0ebd1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="a772e14e-79ee-4d6b-83fd-c57ef368e75d" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1e589169-f23e-4f38-b12b-bf6af1304082" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="FINDDOCUMENTBYDATE" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request" id="05c4e880-2531-452b-a3a0-b102904bec20"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/document/getDocument" methodName="getDocument" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="6ecb055d-6395-4308-8437-f78cb88964e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/document/getDocument</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="15b07e66-c072-477d-bf12-63e3c89ee263" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="43be697b-2582-4abc-9774-6b944a79035d" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="date" value="2022-12-07"/></con:parameters><con:parameterOrder><con:entry>date</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="REST Request 2" id="417d0d97-f6d8-4ab9-9327-564458ee77ea"><con:settings/><con:config service="LogicalDOC REST API 1" resourcePath="/services/rest/search/find" methodName="find" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request 2" id="9730857d-3daf-489c-bfa4-d55cb0b95261" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://localhost:8080</con:endpoint><con:request>{\r
  "dateFrom" : "2022-07-12",\r
}</con:request><con:originalUri>https://localhost/services/rest/search/find</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="30e14ea2-149d-42c9-9953-10a0eee4378c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="bd3768ba-dab3-426c-92ac-7a4165f6d38f" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="76327427-8b63-4d14-9c55-9157c168a04b" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="ADDBOOKMARK" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request" id="74d93ed7-2457-40da-90e2-93fb06d3e18a"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/bookmark/saveBookmark" methodName="saveBookmark" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="c0f7bdff-f69b-400a-8872-da36409fdc1f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request>{\r
  "id" : 0,\r
  "userId" : 0,\r
  "targetId" : 101,\r
  "title" : "string",\r
  "description" : "string",\r
  "position" : 0,\r
  "fileType" : "string",\r
  "type" : 0\r
}</con:request><con:originalUri>http://localhost/logicaldoc/services/rest/bookmark/saveBookmark</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="861ac6ec-0721-488a-b2b2-fd3aa151bef7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="beefce96-73c7-455b-a1a7-fc331f31dadb" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="81b9c3a2-d691-4b7a-b778-381c97c8486b" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="DELETEBOOKMARK" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request" id="9e02fd01-9846-4049-b9f5-4ce8d641cc96"><con:settings/><con:config service="LogicalDOC REST API" resourcePath="/services/rest/bookmark/unbookmarkDocument" methodName="unbookmarkDocument" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="9b7ac4db-3fa1-4468-bb11-bff7dce978ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080/logicaldoc</con:endpoint><con:request/><con:originalUri>http://localhost/logicaldoc/services/rest/bookmark/unbookmarkDocument</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="448d3d97-097c-44ef-ad27-a7dffd627d0c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="6803a432-a9d5-4e70-aa8f-45a9995a526c" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="docId" value="${#[DOCUMENT#ADDBOOKMARK#REST Request]#Response#$['targetId']}"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="53660e06-8048-4f02-8f15-dd570a58fff0" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="ADDTAG" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="REST Request" id="75c49f5c-73d1-420b-95b1-45fe3b959908"><con:settings/><con:config service="LogicalDOC REST API 1" methodName="addDocumentTags" resourcePath="/services/rest/tag/addDocumentTags" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="2b87fafe-a900-4216-aaed-d96ab13e7110" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8080</con:endpoint><con:request/><con:originalUri>https://localhost/services/rest/tag/addDocumentTags</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c7bce003-445d-459d-a61b-3efb02d91dd7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="19216ae3-12eb-4c78-9772-76762fd3123b" name="Response SLA"><con:configuration><SLA>200</SLA></con:configuration></con:assertion><con:credentials><con:username>admin</con:username><con:password>admin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="docId" value="100"/><con:entry key="tag" value="test"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>